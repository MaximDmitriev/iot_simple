[{"D:\\projects\\esp32\\front\\src\\index.js":"1","D:\\projects\\esp32\\front\\src\\App.js":"2","D:\\projects\\esp32\\front\\src\\pages\\index.js":"3","D:\\projects\\esp32\\front\\src\\components\\navbar\\index.js":"4","D:\\projects\\esp32\\front\\src\\pages\\login.js":"5","D:\\projects\\esp32\\front\\src\\pages\\404.js":"6","D:\\projects\\esp32\\front\\src\\pages\\main.js":"7","D:\\projects\\esp32\\front\\src\\components\\navbar\\style.js":"8","D:\\projects\\esp32\\front\\src\\pages\\style\\login-style.js":"9","D:\\projects\\esp32\\front\\src\\pages\\style\\404-style.js":"10","D:\\projects\\esp32\\front\\src\\pages\\style\\main-style.js":"11","D:\\projects\\esp32\\front\\src\\components\\report-container\\index.js":"12","D:\\projects\\esp32\\front\\src\\components\\report-container\\style.js":"13","D:\\projects\\esp32\\front\\src\\services\\fetchData.js":"14","D:\\projects\\esp32\\front\\src\\components\\error\\index.js":"15","D:\\projects\\esp32\\front\\src\\components\\error\\style.js":"16","D:\\projects\\esp32\\front\\src\\components\\list-report\\index.js":"17","D:\\projects\\esp32\\front\\src\\components\\list-report\\utils.js":"18","D:\\projects\\esp32\\front\\src\\components\\list-report\\list-localization.js":"19","D:\\projects\\esp32\\front\\src\\services\\auth.js":"20","D:\\projects\\esp32\\front\\src\\components\\modal\\index.js":"21","D:\\projects\\esp32\\front\\src\\components\\modal\\style.js":"22","D:\\projects\\esp32\\front\\src\\components\\widgets\\index.js":"23","D:\\projects\\esp32\\front\\src\\components\\popup\\index.js":"24","D:\\projects\\esp32\\front\\src\\components\\popup\\style.js":"25","D:\\projects\\esp32\\front\\src\\components\\list-report\\style.js":"26","D:\\projects\\esp32\\front\\src\\components\\widgets\\style.js":"27"},{"size":241,"mtime":1611953310360,"results":"28","hashOfConfig":"29"},{"size":2270,"mtime":1612026616016,"results":"30","hashOfConfig":"29"},{"size":160,"mtime":1610046352222,"results":"31","hashOfConfig":"29"},{"size":2702,"mtime":1610301669173,"results":"32","hashOfConfig":"29"},{"size":3901,"mtime":1611952198119,"results":"33","hashOfConfig":"29"},{"size":967,"mtime":1610289067231,"results":"34","hashOfConfig":"29"},{"size":1693,"mtime":1610302671663,"results":"35","hashOfConfig":"29"},{"size":275,"mtime":1610104090316,"results":"36","hashOfConfig":"29"},{"size":594,"mtime":1610284343216,"results":"37","hashOfConfig":"29"},{"size":435,"mtime":1610104541099,"results":"38","hashOfConfig":"29"},{"size":218,"mtime":1610104650604,"results":"39","hashOfConfig":"29"},{"size":1795,"mtime":1612383324661,"results":"40","hashOfConfig":"29"},{"size":613,"mtime":1610115906163,"results":"41","hashOfConfig":"29"},{"size":1155,"mtime":1612286104973,"results":"42","hashOfConfig":"29"},{"size":388,"mtime":1610115747519,"results":"43","hashOfConfig":"29"},{"size":172,"mtime":1610115747661,"results":"44","hashOfConfig":"29"},{"size":2230,"mtime":1612383407160,"results":"45","hashOfConfig":"29"},{"size":2621,"mtime":1612379488615,"results":"46","hashOfConfig":"29"},{"size":2494,"mtime":1610133810467,"results":"47","hashOfConfig":"29"},{"size":648,"mtime":1610301669157,"results":"48","hashOfConfig":"29"},{"size":5719,"mtime":1612383324678,"results":"49","hashOfConfig":"29"},{"size":1176,"mtime":1611940065069,"results":"50","hashOfConfig":"29"},{"size":2282,"mtime":1612383324670,"results":"51","hashOfConfig":"29"},{"size":1408,"mtime":1612037188168,"results":"52","hashOfConfig":"29"},{"size":215,"mtime":1612037194422,"results":"53","hashOfConfig":"29"},{"size":469,"mtime":1612039882813,"results":"54","hashOfConfig":"29"},{"size":785,"mtime":1612103139692,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"1x2h9kc",{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"58"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"58"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"58"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"58"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"58"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"D:\\projects\\esp32\\front\\src\\index.js",[],["116","117"],"D:\\projects\\esp32\\front\\src\\App.js",["118"],"import React, { createContext, useContext, useState } from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport { Container } from '@material-ui/core';\nimport { MainPage, LoginPage, NotFoundPage } from './pages';\nimport { useProvideAuth } from './services/auth';\nimport { MuiPickersUtilsProvider } from '@material-ui/pickers';\nimport { SnackbarProvider } from 'notistack';\nimport dayjsUtils from '@date-io/dayjs';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport './App.css';\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundImage: 'url(/img/iot4.png)',\n    backgroundRepeat: 'no-repeat',\n    backgroundPositionY: 'center',\n    height: '100vh',\n    width: '100%',\n    margin: 0,\n    padding: 0\n  },\n}));\n\nconst authContext = createContext();\nexport function useAuth() {\n  return useContext(authContext);\n}\n\nfunction ProvideAuth({ children }) {\n  const auth = useProvideAuth();\n\n  return <authContext.Provider value={auth}>{children}</authContext.Provider>\n}\n\nfunction PrivateRoute({ children, ...rest }) {\n  const auth = useAuth();\n  return (\n    <Route\n      {...rest}\n      render={({ location }) => auth.user\n        ? children\n        : <Redirect to={{ pathname: \"/login\", state: { from: location } }} />}\n    />\n  );\n}\n\nfunction App() {\n  const classes = useStyles();\n\n  return (\n    <SnackbarProvider\n      anchorOrigin={{\n        vertical: 'top',\n        horizontal: 'right',\n      }}\n      maxSnack={5}\n      preventDuplicate\n    >\n      <MuiPickersUtilsProvider utils={dayjsUtils}>\n        <Container maxWidth=\"lg\">\n          <Container maxWidth=\"lg\" className={classes.root} >\n            <ProvideAuth>\n              <Switch>\n                <PrivateRoute path=\"/report\">\n                  <MainPage />\n                </PrivateRoute>\n                <PrivateRoute path=\"/\" exact>\n                  <MainPage />\n                </PrivateRoute>\n                <Route path=\"/login\">\n                  <LoginPage />\n                </Route>\n                <Route>\n                  <NotFoundPage />\n                </Route>\n              </Switch>\n            </ProvideAuth>\n          </Container>\n        </Container>\n      </MuiPickersUtilsProvider>\n    </SnackbarProvider>\n  );\n}\n\nexport default App;\n","D:\\projects\\esp32\\front\\src\\pages\\index.js",[],"D:\\projects\\esp32\\front\\src\\components\\navbar\\index.js",[],"D:\\projects\\esp32\\front\\src\\pages\\login.js",["119"],"import React, { useState } from 'react';\r\nimport { useHistory, useLocation } from 'react-router-dom';\r\nimport {\r\n  Box,\r\n  Button,\r\n  FormControl,\r\n  IconButton,\r\n  InputAdornment,\r\n  Paper,\r\n  TextField,\r\n  Typography\r\n} from '@material-ui/core';\r\nimport { AccountCircle, Lock, Visibility, VisibilityOff } from '@material-ui/icons';\r\nimport { Navbar } from '../components/navbar';\r\nimport { useAuth } from '../App';\r\n\r\nimport { useStyles } from './style/login-style';\r\n\r\n\r\nexport const LoginPage = () => {\r\n  const classes = useStyles();\r\n  const auth = useAuth();\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n\r\n  const [values, setValues] = useState({\r\n    login: '',\r\n    password: '',\r\n    showPassword: false,\r\n  });\r\n\r\n  const [errors, setErrors] = useState({\r\n    login: false,\r\n    password: false,\r\n    loginText: '',\r\n    passwordText: ''\r\n  });\r\n\r\n  const [type, setType] = useState({\r\n    newUser: false\r\n  });\r\n\r\n  const changeFormType = () => {\r\n    setType({ newUser: !type.newUser });\r\n  }\r\n\r\n  const login = () => {\r\n    const { from } = location.state || { from: { pathname: \"/report\" } };\r\n    auth.signin(() => {\r\n      history.replace(from);\r\n    });\r\n\r\n  }\r\n\r\n  const handleChange = (prop) => (event) => {\r\n    setValues({ ...values, [prop]: event.target.value });\r\n  };\r\n\r\n  const handleClickShowPassword = () => {\r\n    setValues({ ...values, showPassword: !values.showPassword });\r\n  };\r\n\r\n  const handleMouseDownPassword = (event) => {\r\n    event.preventDefault();\r\n  };\r\n\r\n\r\n  return (\r\n    <>\r\n      <Navbar title={'Авторизация'} />\r\n      <Paper elevation={3} className={classes.paper}>\r\n        <Typography variant={'h6'} align={'center'}>\r\n          {type.newUser ? 'Регистрация нового пользователя' : 'Вход в аккаунт'}\r\n        </Typography>\r\n        <FormControl className={classes.inputWrapper}>\r\n          <TextField\r\n            id=\"login\"\r\n            label=\"Логин\"\r\n            error={errors.login}\r\n            helperText={errors.loginText}\r\n            onChange={handleChange('login')}\r\n            InputProps={{\r\n              startAdornment: (\r\n                <InputAdornment position=\"start\">\r\n                  <AccountCircle />\r\n                </InputAdornment>\r\n              )\r\n            }}\r\n          />\r\n        </FormControl>\r\n        <FormControl className={classes.inputWrapper}>\r\n          <TextField\r\n            id=\"password\"\r\n            label=\"Пароль\"\r\n            type={values.showPassword ? 'text' : 'password'}\r\n            error={errors.password}\r\n            helperText={errors.passwordText}\r\n            onChange={handleChange('password')}\r\n            InputProps={{\r\n              startAdornment: (\r\n                <InputAdornment position=\"start\">\r\n                  <Lock />\r\n                </InputAdornment>\r\n              ),\r\n              endAdornment: (\r\n              <InputAdornment position=\"end\">\r\n                <IconButton\r\n                  aria-label=\"toggle password visibility\"\r\n                  onClick={handleClickShowPassword}\r\n                  onMouseDown={handleMouseDownPassword}\r\n                >\r\n                  {values.showPassword ? <Visibility /> : <VisibilityOff />}\r\n                </IconButton>\r\n              </InputAdornment>\r\n              )\r\n            }}\r\n          />\r\n        </FormControl>\r\n        <Box className={classes.btnWrapper}>\r\n          <Button className={classes.button} color=\"primary\" variant=\"contained\" onClick={login}>\r\n            {type.newUser ? 'Зарегистрироваться' : 'Войти'}\r\n          </Button>\r\n          <Button className={classes.button} variant=\"contained\" onClick={changeFormType}>\r\n            {type.newUser ? 'Уже есть аккаунт' : 'Создать аккаунт'}\r\n          </Button>\r\n        </Box>\r\n      </Paper>\r\n    </>\r\n  )\r\n}","D:\\projects\\esp32\\front\\src\\pages\\404.js",[],"D:\\projects\\esp32\\front\\src\\pages\\main.js",["120"],"import React, { useEffect, useState } from 'react';\r\nimport { Navbar } from '../components/navbar';\r\nimport { Paper, Typography } from '@material-ui/core';\r\nimport { ReportContainer } from '../components/report-container';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nimport { useStyles } from './style/main-style';\r\n\r\n\r\nconst reportsList = [\r\n  { url: 'users', name: 'Пользователи' },\r\n  { url: 'sensors', name: 'Датчики' },\r\n  { url: 'dashboards', name: 'Дашборды' },\r\n];\r\n\r\n\r\n\r\nexport const MainPage = () => {\r\n  const classes = useStyles();\r\n  const location = useLocation();\r\n\r\n  const [report, setReport] = useState({\r\n    type: 'start',\r\n    name: 'Основная панель'\r\n  });\r\n\r\n  const chooseReport = (item) => {\r\n    const currentReport = reportsList.find(r => r.url === item);\r\n    if (currentReport) {\r\n      setReport({ type: currentReport.url, name: currentReport.name });\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    let restUrl = location.pathname.split('/');\r\n    if (restUrl[1] === 'report' && restUrl[2]) {\r\n      chooseReport(restUrl[2]);\r\n    }\r\n  }, []);\r\n\r\n  const onSelectItem = (item) => {\r\n    chooseReport(item);\r\n  };\r\n\r\n\r\n  return (\r\n    <>\r\n      <Navbar title={report.name} showBtn userName=\"Максим Дмитриев\" reports={reportsList} onSelectItem={(item) => onSelectItem(item)}/>\r\n      {report.type === 'start'\r\n        ? (<Paper elevation={5} className={classes.paper}>\r\n            <Typography variant={'body1'} align={'center'}>\r\n              Выберите в меню нужный отчет\r\n            </Typography>\r\n          </Paper>)\r\n        : <ReportContainer url={report.type}/>}\r\n    </>\r\n  )\r\n}","D:\\projects\\esp32\\front\\src\\components\\navbar\\style.js",[],"D:\\projects\\esp32\\front\\src\\pages\\style\\login-style.js",[],"D:\\projects\\esp32\\front\\src\\pages\\style\\404-style.js",[],"D:\\projects\\esp32\\front\\src\\pages\\style\\main-style.js",[],"D:\\projects\\esp32\\front\\src\\components\\report-container\\index.js",["121"],"D:\\projects\\esp32\\front\\src\\components\\report-container\\style.js",[],"D:\\projects\\esp32\\front\\src\\services\\fetchData.js",[],"D:\\projects\\esp32\\front\\src\\components\\error\\index.js",[],"D:\\projects\\esp32\\front\\src\\components\\error\\style.js",[],"D:\\projects\\esp32\\front\\src\\components\\list-report\\index.js",[],"D:\\projects\\esp32\\front\\src\\components\\list-report\\utils.js",["122"],"D:\\projects\\esp32\\front\\src\\components\\list-report\\list-localization.js",[],"D:\\projects\\esp32\\front\\src\\services\\auth.js",[],"D:\\projects\\esp32\\front\\src\\components\\modal\\index.js",["123","124","125","126"],"import React, { useEffect, useMemo, useState } from 'react';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Skeleton from '@material-ui/lab/Skeleton'\r\nimport { WidgetContainer } from '../widgets';\r\nimport { useSnackbar } from 'notistack';\r\nimport { PopupComponent } from '../popup';\r\nimport FetchData from '../../services/fetchData';\r\n\r\nimport { useStyles } from './style';\r\n\r\n\r\nconst fetchService = new FetchData();\r\n\r\nexport const ModalWrapper = ({ show, act, onClose, title, titleField, tableName, id, height, definition }) => {\r\n  const classes = useStyles();\r\n\r\n  const [data, setData] = useState({});\r\n  const [status, setStatus] = useState('loading'); //loaded, error\r\n  const [popupOpen, setPopupOpen] = useState(false);\r\n  const [mode, setMode] = useState(act);\r\n  const { enqueueSnackbar, closeSnackbar } = useSnackbar();\r\n\r\n  const formDefinition = useMemo(() => {\r\n    return mode === 'create'\r\n      ? definition\r\n      : definition.filter(c => !c.onlyCreatedMode);\r\n  }, [mode]);\r\n\r\n\r\n  useEffect(() => {\r\n    setMode(act);\r\n    if (act === 'create') {\r\n      setStatus('loaded');\r\n    }\r\n  }, [show]);\r\n\r\n  useEffect(() => {\r\n      if (mode === 'edit' && id) {\r\n      setStatus('loading');\r\n      fetchService\r\n        .getOneRecord(tableName, id)\r\n        .then(res => {\r\n          setData(res);\r\n          setTimeout(() => {\r\n            setStatus('loaded');\r\n          }, 500);\r\n        })\r\n        .catch(err => {\r\n          console.log(err);\r\n          setStatus('error');\r\n        });\r\n    }\r\n    return () => {\r\n      // console.log('unmount');\r\n    }\r\n  }, [id]);\r\n\r\n  const onCloseHandler = () => {\r\n    setStatus('loading');\r\n    setData({});\r\n    onClose();\r\n  }\r\n\r\n  const addAlert = () => {\r\n    enqueueSnackbar('Test snackbar', {\r\n      variant: 'success'\r\n    });\r\n  }\r\n\r\n  const openPopup = () => {\r\n    setPopupOpen(true);\r\n  }\r\n\r\n  const confirmHandle = () => {\r\n    setPopupOpen(false);\r\n    console.log('agree');\r\n  }\r\n\r\n  const declineHandler = () => {\r\n    setPopupOpen(false);\r\n    console.log('cancel');\r\n  }\r\n\r\n  const updateWidgetData = (fieldName, val) => {\r\n    setData((data) => ({...data, [fieldName]: val }));\r\n  }\r\n\r\n  const createRecord = () => {\r\n    fetchService\r\n      .data(data)\r\n      .createRecord('users')\r\n      .then((res) => {\r\n        if (res.errors) {\r\n          enqueueSnackbar(`Не удалось создать запись. ${res.message}`, { variant: 'error', autoHideDuration: 8000 });\r\n        } else {\r\n          setData(res);\r\n          setMode('edit');\r\n          enqueueSnackbar(`Запись ${data[titleField]} создана успешно`, { variant: 'success', autoHideDuration: 5000 });\r\n\r\n        }\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n        enqueueSnackbar(`Не удалось создать запись. ${err.message}`, { variant: 'error', autoHideDuration: 5000 });\r\n      })\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <PopupComponent open={popupOpen} onAccept={confirmHandle} onCancel={declineHandler} />\r\n      <Modal\r\n        open={show}\r\n        onClose={onCloseHandler}\r\n        closeAfterTransition\r\n        BackdropComponent={Backdrop}\r\n        BackdropProps={{\r\n          timeout: 500,\r\n        }}\r\n      >\r\n        <Slide direction='down' in={show} mountOnEnter unmountOnExit>\r\n          <div className={classes.container}>\r\n            <AppBar position='static' className={classes.appbar}>\r\n              <div className={classes.displayName}>\r\n                <Typography className={classes.title}>\r\n                  {title}:\r\n                </Typography>\r\n                <Typography className={classes.title}>\r\n                  {status === 'loading' || status ==='error'\r\n                    ? <Skeleton variant='text' className={classes.titleMock}/>\r\n                    : mode === 'edit' ? data[titleField] : ''}\r\n                </Typography>\r\n              </div>\r\n              <div className={classes.btnGroup}>\r\n                {mode === 'edit'\r\n                  ? <Button variant='contained' color='secondary' onClick={openPopup}>Удалить запись</Button>\r\n                  : null}\r\n                <Button\r\n                  variant='contained'\r\n                  className={classes.headerBtn}\r\n                  onClick={mode === 'edit' ? addAlert: createRecord}\r\n                >\r\n                  {mode === 'edit' ? 'Сохранить' : 'Создать'}\r\n                </Button>\r\n              </div>\r\n            </AppBar>\r\n            <div className={classes.grid} style={{height: height + 'px'}}>\r\n              {formDefinition.map((cell, idx) => {\r\n                return (\r\n                  <div\r\n                    key={idx}\r\n                    className={classes.cell}\r\n                    style={{\r\n                      height: cell.height,\r\n                      width: cell.width,\r\n                      top: cell.top,\r\n                      left: cell.left\r\n                    }}\r\n                  >\r\n                    <Typography className={classes.label}>{cell.label}</Typography>\r\n                    {status === 'loading'\r\n                      ? <Skeleton variant=\"rect\" width='100%' height='40px'/>\r\n                      : <WidgetContainer definition={cell} data={data[cell.fieldName] || null} updateData={updateWidgetData}/>}\r\n                  </div>\r\n                )\r\n              })}\r\n            </div>\r\n          </div>\r\n        </Slide>\r\n      </Modal>\r\n    </div>\r\n  )\r\n}","D:\\projects\\esp32\\front\\src\\components\\modal\\style.js",[],"D:\\projects\\esp32\\front\\src\\components\\widgets\\index.js",["127"],"import React, { useState } from 'react';\r\nimport { TextField } from '@material-ui/core';\r\nimport { Autocomplete } from '@material-ui/lab';\r\nimport { DateTimePicker } from '@material-ui/pickers';\r\nimport dayjs from 'dayjs';\r\n\r\nimport { useStyles } from './style';\r\n\r\n\r\nexport const WidgetContainer = ({ definition, data, updateData }) => {\r\n  const classes = useStyles();\r\n  const [val, setVal] = useState(data);\r\n\r\n  const onChangeHandler = (e, value) => {\r\n    if (definition.fieldFormat === 'datetime') {\r\n      // setVal(dayjs(e).valueOf());\r\n      updateData(definition.fieldName, dayjs(e).valueOf());\r\n    } else {\r\n      // setVal(value);\r\n      updateData(definition.fieldName, value);\r\n    }\r\n  }\r\n\r\n  const onBlurHandler = (e) => {\r\n    updateData(definition.fieldName, e.target.value);\r\n  }\r\n\r\n  switch (definition.fieldFormat) {\r\n    case 'text':\r\n      return (\r\n        <TextField\r\n          classes={{root: classes.textFieldRoot}}\r\n          // defaultValue={val}\r\n          defaultValue={data}\r\n          onBlur={onBlurHandler}\r\n          variant='outlined'\r\n          required={definition.required}\r\n          disabled={definition.readonly}\r\n          fullWidth\r\n        />\r\n      )\r\n    case 'combobox':\r\n      return (\r\n        <Autocomplete\r\n          className={definition.readonly ? classes.disabled : ''}\r\n          // value={val}\r\n          defaultValue={data}\r\n          onChange={onChangeHandler}\r\n          renderInput={\r\n            (props) => <TextField\r\n              {...props}\r\n              variant='outlined'\r\n            />\r\n          }\r\n          options={definition.pattern}\r\n          required={definition.required}\r\n          disabled={definition.readonly}\r\n          fullWidth\r\n        />\r\n      )\r\n    case 'datetime':\r\n      return (\r\n        <DateTimePicker\r\n          className={definition.readonly ? classes.disabled : ''}\r\n          // value={val}\r\n          defaultValue={data}\r\n          onChange={onChangeHandler}\r\n          format='MM/DD/YYYY HH:mm'\r\n          ampm={false}\r\n          inputVariant='outlined'\r\n          required={definition.required}\r\n          readOnly={definition.readonly}\r\n          fullWidth\r\n        />\r\n      )\r\n    default:\r\n      return (\r\n        <div>{definition.fieldFormat}: {val}</div>\r\n      )\r\n  }\r\n}","D:\\projects\\esp32\\front\\src\\components\\popup\\index.js",[],"D:\\projects\\esp32\\front\\src\\components\\popup\\style.js",[],"D:\\projects\\esp32\\front\\src\\components\\list-report\\style.js",[],"D:\\projects\\esp32\\front\\src\\components\\widgets\\style.js",[],{"ruleId":"128","replacedBy":"129"},{"ruleId":"130","replacedBy":"131"},{"ruleId":"132","severity":1,"message":"133","line":1,"column":44,"nodeType":"134","messageId":"135","endLine":1,"endColumn":52},{"ruleId":"132","severity":1,"message":"136","line":32,"column":18,"nodeType":"134","messageId":"135","endLine":32,"endColumn":27},{"ruleId":"137","severity":1,"message":"138","line":38,"column":6,"nodeType":"139","endLine":38,"endColumn":8,"suggestions":"140"},{"ruleId":"137","severity":1,"message":"141","line":45,"column":5,"nodeType":"139","endLine":45,"endColumn":10,"suggestions":"142"},{"ruleId":"143","severity":1,"message":"144","line":35,"column":29,"nodeType":"145","messageId":"146","endLine":35,"endColumn":31},{"ruleId":"132","severity":1,"message":"147","line":26,"column":28,"nodeType":"134","messageId":"135","endLine":26,"endColumn":41},{"ruleId":"137","severity":1,"message":"148","line":32,"column":6,"nodeType":"139","endLine":32,"endColumn":12,"suggestions":"149"},{"ruleId":"137","severity":1,"message":"150","line":42,"column":6,"nodeType":"139","endLine":42,"endColumn":12,"suggestions":"151"},{"ruleId":"137","severity":1,"message":"152","line":63,"column":6,"nodeType":"139","endLine":63,"endColumn":10,"suggestions":"153"},{"ruleId":"132","severity":1,"message":"154","line":12,"column":15,"nodeType":"134","messageId":"135","endLine":12,"endColumn":21},"no-native-reassign",["155"],"no-negated-in-lhs",["156"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'setErrors' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'location.pathname'. Either include it or remove the dependency array.","ArrayExpression",["157"],"React Hook useEffect has a missing dependency: 'getData'. Either include it or remove the dependency array.",["158"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'closeSnackbar' is assigned a value but never used.","React Hook useMemo has a missing dependency: 'definition'. Either include it or remove the dependency array.",["159"],"React Hook useEffect has a missing dependency: 'act'. Either include it or remove the dependency array. If 'setMode' needs the current value of 'act', you can also switch to useReducer instead of useState and read 'act' in the reducer.",["160"],"React Hook useEffect has missing dependencies: 'mode' and 'tableName'. Either include them or remove the dependency array.",["161"],"'setVal' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"162","fix":"163"},{"desc":"164","fix":"165"},{"desc":"166","fix":"167"},{"desc":"168","fix":"169"},{"desc":"170","fix":"171"},"Update the dependencies array to be: [location.pathname]",{"range":"172","text":"173"},"Update the dependencies array to be: [getData, url]",{"range":"174","text":"175"},"Update the dependencies array to be: [definition, mode]",{"range":"176","text":"177"},"Update the dependencies array to be: [act, show]",{"range":"178","text":"179"},"Update the dependencies array to be: [id, mode, tableName]",{"range":"180","text":"181"},[1068,1070],"[location.pathname]",[1131,1136],"[getData, url]",[1242,1248],"[definition, mode]",[1419,1425],"[act, show]",[1891,1895],"[id, mode, tableName]"]