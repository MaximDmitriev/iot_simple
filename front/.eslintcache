[{"D:\\projects\\esp32\\front\\src\\components\\navbar\\index.jsx":"1","D:\\projects\\esp32\\front\\src\\pages\\login.jsx":"2","D:\\projects\\esp32\\front\\src\\pages\\404.jsx":"3","D:\\projects\\esp32\\front\\src\\pages\\main.jsx":"4","D:\\projects\\esp32\\front\\src\\components\\navbar\\style.js":"5","D:\\projects\\esp32\\front\\src\\pages\\style\\login-style.js":"6","D:\\projects\\esp32\\front\\src\\pages\\style\\404-style.js":"7","D:\\projects\\esp32\\front\\src\\pages\\style\\main-style.js":"8","D:\\projects\\esp32\\front\\src\\components\\report-container\\index.jsx":"9","D:\\projects\\esp32\\front\\src\\components\\report-container\\style.js":"10","D:\\projects\\esp32\\front\\src\\services\\fetchData.js":"11","D:\\projects\\esp32\\front\\src\\components\\error\\style.js":"12","D:\\projects\\esp32\\front\\src\\components\\list-report\\index.jsx":"13","D:\\projects\\esp32\\front\\src\\components\\list-report\\utils.js":"14","D:\\projects\\esp32\\front\\src\\components\\list-report\\list-localization.js":"15","D:\\projects\\esp32\\front\\src\\services\\auth.js":"16","D:\\projects\\esp32\\front\\src\\components\\modal\\index.jsx":"17","D:\\projects\\esp32\\front\\src\\components\\modal\\style.js":"18","D:\\projects\\esp32\\front\\src\\components\\widgets\\index.jsx":"19","D:\\projects\\esp32\\front\\src\\components\\popup\\index.jsx":"20","D:\\projects\\esp32\\front\\src\\components\\popup\\style.js":"21","D:\\projects\\esp32\\front\\src\\components\\list-report\\style.js":"22","D:\\projects\\esp32\\front\\src\\components\\widgets\\style.js":"23","D:\\projects\\esp32\\front\\src\\App.jsx":"24","D:\\projects\\esp32\\front\\src\\components\\error\\index.jsx":"25","D:\\projects\\esp32\\front\\src\\index.js":"26","D:\\projects\\esp32\\front\\src\\pages\\index.js":"27"},{"size":2701,"mtime":1612560717668,"results":"28","hashOfConfig":"29"},{"size":3901,"mtime":1611952198119,"results":"30","hashOfConfig":"29"},{"size":967,"mtime":1610289067231,"results":"31","hashOfConfig":"29"},{"size":1693,"mtime":1610302671663,"results":"32","hashOfConfig":"29"},{"size":275,"mtime":1610104090316,"results":"33","hashOfConfig":"29"},{"size":594,"mtime":1610284343216,"results":"34","hashOfConfig":"29"},{"size":435,"mtime":1610104541099,"results":"35","hashOfConfig":"29"},{"size":218,"mtime":1610104650604,"results":"36","hashOfConfig":"29"},{"size":1765,"mtime":1612560717632,"results":"37","hashOfConfig":"29"},{"size":613,"mtime":1610115906163,"results":"38","hashOfConfig":"29"},{"size":1557,"mtime":1612560771923,"results":"39","hashOfConfig":"29"},{"size":172,"mtime":1610115747661,"results":"40","hashOfConfig":"29"},{"size":2230,"mtime":1612383407160,"results":"41","hashOfConfig":"29"},{"size":2621,"mtime":1612379488615,"results":"42","hashOfConfig":"29"},{"size":2494,"mtime":1610133810467,"results":"43","hashOfConfig":"29"},{"size":648,"mtime":1610301669157,"results":"44","hashOfConfig":"29"},{"size":7222,"mtime":1612560717682,"results":"45","hashOfConfig":"29"},{"size":1176,"mtime":1611940065069,"results":"46","hashOfConfig":"29"},{"size":1911,"mtime":1612556633538,"results":"47","hashOfConfig":"29"},{"size":1408,"mtime":1612037188168,"results":"48","hashOfConfig":"29"},{"size":215,"mtime":1612037194422,"results":"49","hashOfConfig":"29"},{"size":469,"mtime":1612039882813,"results":"50","hashOfConfig":"29"},{"size":785,"mtime":1612103139692,"results":"51","hashOfConfig":"29"},{"size":2260,"mtime":1612557321787,"results":"52","hashOfConfig":"29"},{"size":388,"mtime":1610115747519,"results":"53","hashOfConfig":"29"},{"size":241,"mtime":1612557585915,"results":"54","hashOfConfig":"29"},{"size":160,"mtime":1610046352222,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1x2h9kc",{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"61"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"61"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"61"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"61"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"61"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\projects\\esp32\\front\\src\\components\\navbar\\index.jsx",[],"D:\\projects\\esp32\\front\\src\\pages\\login.jsx",["116"],"import React, { useState } from 'react';\r\nimport { useHistory, useLocation } from 'react-router-dom';\r\nimport {\r\n  Box,\r\n  Button,\r\n  FormControl,\r\n  IconButton,\r\n  InputAdornment,\r\n  Paper,\r\n  TextField,\r\n  Typography\r\n} from '@material-ui/core';\r\nimport { AccountCircle, Lock, Visibility, VisibilityOff } from '@material-ui/icons';\r\nimport { Navbar } from '../components/navbar';\r\nimport { useAuth } from '../App';\r\n\r\nimport { useStyles } from './style/login-style';\r\n\r\n\r\nexport const LoginPage = () => {\r\n  const classes = useStyles();\r\n  const auth = useAuth();\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n\r\n  const [values, setValues] = useState({\r\n    login: '',\r\n    password: '',\r\n    showPassword: false,\r\n  });\r\n\r\n  const [errors, setErrors] = useState({\r\n    login: false,\r\n    password: false,\r\n    loginText: '',\r\n    passwordText: ''\r\n  });\r\n\r\n  const [type, setType] = useState({\r\n    newUser: false\r\n  });\r\n\r\n  const changeFormType = () => {\r\n    setType({ newUser: !type.newUser });\r\n  }\r\n\r\n  const login = () => {\r\n    const { from } = location.state || { from: { pathname: \"/report\" } };\r\n    auth.signin(() => {\r\n      history.replace(from);\r\n    });\r\n\r\n  }\r\n\r\n  const handleChange = (prop) => (event) => {\r\n    setValues({ ...values, [prop]: event.target.value });\r\n  };\r\n\r\n  const handleClickShowPassword = () => {\r\n    setValues({ ...values, showPassword: !values.showPassword });\r\n  };\r\n\r\n  const handleMouseDownPassword = (event) => {\r\n    event.preventDefault();\r\n  };\r\n\r\n\r\n  return (\r\n    <>\r\n      <Navbar title={'Авторизация'} />\r\n      <Paper elevation={3} className={classes.paper}>\r\n        <Typography variant={'h6'} align={'center'}>\r\n          {type.newUser ? 'Регистрация нового пользователя' : 'Вход в аккаунт'}\r\n        </Typography>\r\n        <FormControl className={classes.inputWrapper}>\r\n          <TextField\r\n            id=\"login\"\r\n            label=\"Логин\"\r\n            error={errors.login}\r\n            helperText={errors.loginText}\r\n            onChange={handleChange('login')}\r\n            InputProps={{\r\n              startAdornment: (\r\n                <InputAdornment position=\"start\">\r\n                  <AccountCircle />\r\n                </InputAdornment>\r\n              )\r\n            }}\r\n          />\r\n        </FormControl>\r\n        <FormControl className={classes.inputWrapper}>\r\n          <TextField\r\n            id=\"password\"\r\n            label=\"Пароль\"\r\n            type={values.showPassword ? 'text' : 'password'}\r\n            error={errors.password}\r\n            helperText={errors.passwordText}\r\n            onChange={handleChange('password')}\r\n            InputProps={{\r\n              startAdornment: (\r\n                <InputAdornment position=\"start\">\r\n                  <Lock />\r\n                </InputAdornment>\r\n              ),\r\n              endAdornment: (\r\n              <InputAdornment position=\"end\">\r\n                <IconButton\r\n                  aria-label=\"toggle password visibility\"\r\n                  onClick={handleClickShowPassword}\r\n                  onMouseDown={handleMouseDownPassword}\r\n                >\r\n                  {values.showPassword ? <Visibility /> : <VisibilityOff />}\r\n                </IconButton>\r\n              </InputAdornment>\r\n              )\r\n            }}\r\n          />\r\n        </FormControl>\r\n        <Box className={classes.btnWrapper}>\r\n          <Button className={classes.button} color=\"primary\" variant=\"contained\" onClick={login}>\r\n            {type.newUser ? 'Зарегистрироваться' : 'Войти'}\r\n          </Button>\r\n          <Button className={classes.button} variant=\"contained\" onClick={changeFormType}>\r\n            {type.newUser ? 'Уже есть аккаунт' : 'Создать аккаунт'}\r\n          </Button>\r\n        </Box>\r\n      </Paper>\r\n    </>\r\n  )\r\n}",["117","118"],"D:\\projects\\esp32\\front\\src\\pages\\404.jsx",[],"D:\\projects\\esp32\\front\\src\\pages\\main.jsx",["119"],"import React, { useEffect, useState } from 'react';\r\nimport { Navbar } from '../components/navbar';\r\nimport { Paper, Typography } from '@material-ui/core';\r\nimport { ReportContainer } from '../components/report-container';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nimport { useStyles } from './style/main-style';\r\n\r\n\r\nconst reportsList = [\r\n  { url: 'users', name: 'Пользователи' },\r\n  { url: 'sensors', name: 'Датчики' },\r\n  { url: 'dashboards', name: 'Дашборды' },\r\n];\r\n\r\n\r\n\r\nexport const MainPage = () => {\r\n  const classes = useStyles();\r\n  const location = useLocation();\r\n\r\n  const [report, setReport] = useState({\r\n    type: 'start',\r\n    name: 'Основная панель'\r\n  });\r\n\r\n  const chooseReport = (item) => {\r\n    const currentReport = reportsList.find(r => r.url === item);\r\n    if (currentReport) {\r\n      setReport({ type: currentReport.url, name: currentReport.name });\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    let restUrl = location.pathname.split('/');\r\n    if (restUrl[1] === 'report' && restUrl[2]) {\r\n      chooseReport(restUrl[2]);\r\n    }\r\n  }, []);\r\n\r\n  const onSelectItem = (item) => {\r\n    chooseReport(item);\r\n  };\r\n\r\n\r\n  return (\r\n    <>\r\n      <Navbar title={report.name} showBtn userName=\"Максим Дмитриев\" reports={reportsList} onSelectItem={(item) => onSelectItem(item)}/>\r\n      {report.type === 'start'\r\n        ? (<Paper elevation={5} className={classes.paper}>\r\n            <Typography variant={'body1'} align={'center'}>\r\n              Выберите в меню нужный отчет\r\n            </Typography>\r\n          </Paper>)\r\n        : <ReportContainer url={report.type}/>}\r\n    </>\r\n  )\r\n}","D:\\projects\\esp32\\front\\src\\components\\navbar\\style.js",[],"D:\\projects\\esp32\\front\\src\\pages\\style\\login-style.js",[],"D:\\projects\\esp32\\front\\src\\pages\\style\\404-style.js",[],"D:\\projects\\esp32\\front\\src\\pages\\style\\main-style.js",[],"D:\\projects\\esp32\\front\\src\\components\\report-container\\index.jsx",["120"],"import React, { useEffect, useState } from 'react';\r\n\r\nimport { useStyles } from './style';\r\nimport { LinearProgress } from '@material-ui/core';\r\n\r\nimport FetchData from '../../services/fetchData';\r\nimport { ErrorComponent } from '../error';\r\nimport { ListReport } from '../list-report';\r\n\r\nconst REPORT_NOT_IMPLEMENTED_MSG = 'Отчет не готов к использованию, выберите другой отчет';\r\n\r\n\r\nconst fetchData = new FetchData();\r\n\r\nexport const ReportContainer = ({ url }) => {\r\n  const classes = useStyles();\r\n\r\n  const [report, setReport] = useState({\r\n    loaded: false,\r\n    type: null,\r\n    data: null,\r\n    metadata: null\r\n  });\r\n\r\n  const getData = () => {\r\n    setReport({ ...report, loaded: false });\r\n    fetchData.getReport(url).then(\r\n      res => {\r\n        if (res) {\r\n          setReport({\r\n            loaded: true,\r\n            type: res.metadata.type,\r\n            data: res.data,\r\n            metadata: res.metadata\r\n          });\r\n        } else {\r\n          console.log('error');\r\n          setReport({ ...report, loaded: 'withError' });\r\n        }\r\n      }\r\n    );\r\n  };\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  },[url]);\r\n\r\n  const updateReport = () => {\r\n    getData()\r\n  }\r\n\r\n  if (!report.loaded) {\r\n    return (\r\n      <div className={classes.progressContainer}>\r\n        <LinearProgress className={classes.progress} />\r\n      </div>\r\n    )\r\n  }\r\n\r\n  if (report.loaded === 'withError') {\r\n    return (\r\n      <div className={classes.wrapper}>\r\n        <ErrorComponent message={REPORT_NOT_IMPLEMENTED_MSG}/>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className={classes.wrapper}>\r\n      {report.type === 'LIST' ? <ListReport data={report.data} metadata={report.metadata} update={updateReport}/> : null}\r\n    </div>\r\n  )\r\n}","D:\\projects\\esp32\\front\\src\\components\\report-container\\style.js",[],"D:\\projects\\esp32\\front\\src\\services\\fetchData.js",[],"D:\\projects\\esp32\\front\\src\\components\\error\\style.js",[],"D:\\projects\\esp32\\front\\src\\components\\list-report\\index.jsx",[],"D:\\projects\\esp32\\front\\src\\components\\list-report\\utils.js",["121"],"import dayjs from 'dayjs';\r\n\r\n\r\nconst ROW_HEIGHT = 85;\r\nconst NUMBER_COLUMNS = 12;\r\n\r\nfunction convertWidth(str, totalWidth) {\r\n  const index = str.indexOf('px');\r\n  return +str.substring(0, index);\r\n}\r\n\r\nexport function getColumns({ definition }) {\r\n  const columns = definition.columns\r\n    .filter(col => col.visible)\r\n    .reduce((acc, col) => {\r\n      return acc.concat([{\r\n        field: col.systemname || col.name,\r\n        headerName: col.name,\r\n        width: convertWidth(col.width),\r\n        hidden: !col.visible,\r\n        order: col.order,\r\n        style: col.style || null\r\n      }]);\r\n    }, [])\r\n    .sort((a, b) => {\r\n      if (a.order < b.order) return -1;\r\n      return 1;\r\n    });\r\n  columns[columns.length -1]['flex'] = 1;\r\n\r\n  return columns;\r\n}\r\n\r\nfunction formatCell(row, stylesMap) {\r\n  Object.keys(row).map(name => {\r\n    if (stylesMap[name]) {\r\n      if (stylesMap[name] === 'datetime') {\r\n        const val = dayjs(row[name]).format('DD/MM/YYYY HH:mm');\r\n        row[name] = val;\r\n      }\r\n    }\r\n  });\r\n\r\n  return row;\r\n}\r\n\r\nexport function formatData(data, columns) {\r\n  const stylesMap = columns.reduce((acc, col) => {\r\n    if (col.style) acc[col.field] = col.style;\r\n    return acc;\r\n  }, {});\r\n  return data.map(row => {\r\n    return formatCell(row, stylesMap);\r\n  });\r\n}\r\n\r\nexport function getFormDefinition({ definition: {columns}}) {\r\n  const rowPositions = columns.reduce((obj, widget) => {\r\n    if (!obj[widget.position[1]] || obj[widget.position[1]] < widget.size[1]) {\r\n      obj[widget.position[1]] = widget.size[1];\r\n    }\r\n    return obj;\r\n  }, {});\r\n  const maxRowNumber = Math.max(...Object.keys(rowPositions).map(k => parseInt(k)));\r\n\r\n  //общая высота сетки\r\n  const totalHeight = rowPositions[maxRowNumber] > 1\r\n    ? (maxRowNumber + rowPositions[maxRowNumber]) * ROW_HEIGHT\r\n    : (maxRowNumber + 1) * ROW_HEIGHT;\r\n\r\n  //параметры одной ячейки в процентах\r\n  const colHeight = (100 * ROW_HEIGHT)/totalHeight;\r\n  const colWidth = 100/NUMBER_COLUMNS;\r\n\r\n  const definition = columns\r\n    .filter(c => c.show_in_form)\r\n    .map(c => ({\r\n      fieldName: c.systemname,\r\n      label: c.name || c.systemname,\r\n      fieldFormat: c.style,\r\n      pattern: c.pattern || null,\r\n      readonly: c.readonly || false,\r\n      required: c.required || false,\r\n      onlyCreatedMode: c.onlyCreated || null,\r\n      width: `${colWidth * c.size[0]}%`,\r\n      height: `${colHeight * c.size[1]}%`,\r\n      top: c.position[1] * colHeight + '%',\r\n      left: c.position[0] * colWidth + '%'\r\n    }));\r\n  return {\r\n    totalHeight,\r\n    definition\r\n  }\r\n}","D:\\projects\\esp32\\front\\src\\components\\list-report\\list-localization.js",[],"D:\\projects\\esp32\\front\\src\\services\\auth.js",[],"D:\\projects\\esp32\\front\\src\\components\\modal\\index.jsx",["122","123","124","125"],"import React, { useEffect, useMemo, useState } from 'react';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Skeleton from '@material-ui/lab/Skeleton'\r\nimport { WidgetContainer } from '../widgets';\r\nimport { useSnackbar } from 'notistack';\r\nimport { PopupComponent } from '../popup';\r\nimport dayjs from 'dayjs';\r\nimport FetchData from '../../services/fetchData';\r\n\r\nimport { useStyles } from './style';\r\n\r\n\r\nconst fetchService = new FetchData('users');\r\n\r\nexport const ModalWrapper = ({ show, act, onClose, title, titleField, tableName, id, height, definition }) => {\r\n  const classes = useStyles();\r\n\r\n  const [data, setData] = useState({});\r\n  const [status, setStatus] = useState('loading'); //loaded, error\r\n  const [popupOpen, setPopupOpen] = useState(false);\r\n  const [mode, setMode] = useState(act);\r\n  const { enqueueSnackbar, closeSnackbar } = useSnackbar();\r\n\r\n  const formDefinition = useMemo(() => {\r\n    return mode === 'create'\r\n      ? definition\r\n      : definition.filter(c => !c.onlyCreatedMode);\r\n  }, [mode]);\r\n\r\n\r\n  useEffect(() => {\r\n    setMode(act);\r\n    if (act === 'create') {\r\n      setStatus('loaded');\r\n    }\r\n  }, [show]);\r\n\r\n  useEffect(() => {\r\n      if (mode === 'edit' && id) {\r\n      setStatus('loading');\r\n      fetchService\r\n        .getOneRecord(id)\r\n        .then(res => {\r\n          setData(res);\r\n          setTimeout(() => {\r\n            setStatus('loaded');\r\n          }, 500);\r\n        })\r\n        .catch(err => {\r\n          console.log(err);\r\n          setStatus('error');\r\n        });\r\n    }\r\n    return () => {\r\n      // console.log('unmount');\r\n    }\r\n  }, [id]);\r\n\r\n  const onCloseHandler = () => {\r\n    setStatus('loading');\r\n    setData({});\r\n    onClose();\r\n  }\r\n\r\n  const updateRecord = () => {\r\n    fetchService\r\n      .data({id: data.id, fields: data})\r\n      .updateRecord()\r\n      .then(res => {\r\n        if (res.errors) {\r\n          enqueueSnackbar(`Не удалось сохранить запись. ${res.message}`, { variant: 'error', autoHideDuration: 8000 });\r\n        } else {\r\n          enqueueSnackbar(`Запись ${data[titleField]} успешно сохранена`, { variant: 'success', autoHideDuration: 5000 });\r\n        }\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n        enqueueSnackbar(`Не удалось сохранить запись. ${err.message}`, { variant: 'error', autoHideDuration: 5000 });\r\n      })\r\n  }\r\n\r\n  const openPopup = () => {\r\n    setPopupOpen(true);\r\n  }\r\n\r\n  const confirmHandle = () => {\r\n    fetchService\r\n      .data({id: data.id})\r\n      .deleteRecord()\r\n      .then(res => {\r\n        if (res.errors) {\r\n          enqueueSnackbar(`Не удалось удалить запись. ${res.message}`, { variant: 'error', autoHideDuration: 8000 });\r\n        } else {\r\n          enqueueSnackbar(`Запись ${data[titleField]} успешно удалена`, { variant: 'success', autoHideDuration: 5000 });\r\n          onClose();\r\n        }\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n        enqueueSnackbar(`Не удалось удалить запись. ${err.message}`, { variant: 'error', autoHideDuration: 5000 });\r\n      })\r\n    setPopupOpen(false);\r\n\r\n  }\r\n\r\n  const declineHandler = () => {\r\n    setPopupOpen(false);\r\n  }\r\n\r\n  const updateWidgetData = (e, val, fieldName, fieldFormat) => {\r\n    switch (fieldFormat) {\r\n      case 'text':\r\n        setData((data) => ({...data, [fieldName]: val }));\r\n        break;\r\n      case 'datetime':\r\n        setData((data) => ({...data, [fieldName]: dayjs(e).valueOf() }));\r\n        break;\r\n      default:\r\n        setData((data) => ({...data, [fieldName]: val }));\r\n    }\r\n  }\r\n\r\n  const createRecord = () => {\r\n    fetchService\r\n      .data(data)\r\n      .createRecord()\r\n      .then((res) => {\r\n        if (res.errors) {\r\n          enqueueSnackbar(`Не удалось создать запись. ${res.message}`, { variant: 'error', autoHideDuration: 8000 });\r\n        } else {\r\n          setData(res);\r\n          setMode('edit');\r\n          enqueueSnackbar(`Запись ${data[titleField]} создана успешно`, { variant: 'success', autoHideDuration: 5000 });\r\n\r\n        }\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n        enqueueSnackbar(`Не удалось создать запись. ${err.message}`, { variant: 'error', autoHideDuration: 5000 });\r\n      })\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <PopupComponent open={popupOpen} onAccept={confirmHandle} onCancel={declineHandler} />\r\n      <Modal\r\n        open={show}\r\n        onClose={onCloseHandler}\r\n        closeAfterTransition\r\n        BackdropComponent={Backdrop}\r\n        BackdropProps={{\r\n          timeout: 500,\r\n        }}\r\n      >\r\n        <Slide direction='down' in={show} mountOnEnter unmountOnExit>\r\n          <div className={classes.container}>\r\n            <AppBar position='static' className={classes.appbar}>\r\n              <div className={classes.displayName}>\r\n                <Typography className={classes.title}>\r\n                  {title}:\r\n                </Typography>\r\n                <Typography className={classes.title}>\r\n                  {status === 'loading' || status ==='error'\r\n                    ? <Skeleton variant='text' className={classes.titleMock}/>\r\n                    : mode === 'edit' ? data[titleField] : ''}\r\n                </Typography>\r\n              </div>\r\n              <div className={classes.btnGroup}>\r\n                {mode === 'edit'\r\n                  ? <Button variant='contained' color='secondary' onClick={openPopup}>Удалить запись</Button>\r\n                  : null}\r\n                <Button\r\n                  variant='contained'\r\n                  className={classes.headerBtn}\r\n                  onClick={mode === 'edit' ? updateRecord : createRecord}\r\n                >\r\n                  {mode === 'edit' ? 'Сохранить' : 'Создать'}\r\n                </Button>\r\n              </div>\r\n            </AppBar>\r\n            <div className={classes.grid} style={{height: height + 'px'}}>\r\n              {formDefinition.map((cell, idx) => {\r\n                return (\r\n                  <div\r\n                    key={idx}\r\n                    className={classes.cell}\r\n                    style={{\r\n                      height: cell.height,\r\n                      width: cell.width,\r\n                      top: cell.top,\r\n                      left: cell.left\r\n                    }}\r\n                  >\r\n                    <Typography className={classes.label}>{cell.label}</Typography>\r\n                    {status === 'loading'\r\n                      ? <Skeleton variant=\"rect\" width='100%' height='40px'/>\r\n                      : <WidgetContainer definition={cell} data={data[cell.fieldName] || null} updateData={updateWidgetData}/>}\r\n                  </div>\r\n                )\r\n              })}\r\n            </div>\r\n          </div>\r\n        </Slide>\r\n      </Modal>\r\n    </div>\r\n  )\r\n}","D:\\projects\\esp32\\front\\src\\components\\modal\\style.js",[],"D:\\projects\\esp32\\front\\src\\components\\widgets\\index.jsx",[],"D:\\projects\\esp32\\front\\src\\components\\popup\\index.jsx",[],"D:\\projects\\esp32\\front\\src\\components\\popup\\style.js",[],"D:\\projects\\esp32\\front\\src\\components\\list-report\\style.js",[],"D:\\projects\\esp32\\front\\src\\components\\widgets\\style.js",[],"D:\\projects\\esp32\\front\\src\\App.jsx",[],"D:\\projects\\esp32\\front\\src\\components\\error\\index.jsx",[],"D:\\projects\\esp32\\front\\src\\index.js",[],"D:\\projects\\esp32\\front\\src\\pages\\index.js",[],{"ruleId":"126","severity":1,"message":"127","line":32,"column":18,"nodeType":"128","messageId":"129","endLine":32,"endColumn":27},{"ruleId":"130","replacedBy":"131"},{"ruleId":"132","replacedBy":"133"},{"ruleId":"134","severity":1,"message":"135","line":38,"column":6,"nodeType":"136","endLine":38,"endColumn":8,"suggestions":"137"},{"ruleId":"134","severity":1,"message":"138","line":46,"column":5,"nodeType":"136","endLine":46,"endColumn":10,"suggestions":"139"},{"ruleId":"140","severity":1,"message":"141","line":35,"column":29,"nodeType":"142","messageId":"143","endLine":35,"endColumn":31},{"ruleId":"126","severity":1,"message":"144","line":27,"column":28,"nodeType":"128","messageId":"129","endLine":27,"endColumn":41},{"ruleId":"134","severity":1,"message":"145","line":33,"column":6,"nodeType":"136","endLine":33,"endColumn":12,"suggestions":"146"},{"ruleId":"134","severity":1,"message":"147","line":41,"column":6,"nodeType":"136","endLine":41,"endColumn":12,"suggestions":"148"},{"ruleId":"134","severity":1,"message":"149","line":62,"column":6,"nodeType":"136","endLine":62,"endColumn":10,"suggestions":"150"},"no-unused-vars","'setErrors' is assigned a value but never used.","Identifier","unusedVar","no-native-reassign",["151"],"no-negated-in-lhs",["152"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'location.pathname'. Either include it or remove the dependency array.","ArrayExpression",["153"],"React Hook useEffect has a missing dependency: 'getData'. Either include it or remove the dependency array.",["154"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'closeSnackbar' is assigned a value but never used.","React Hook useMemo has a missing dependency: 'definition'. Either include it or remove the dependency array.",["155"],"React Hook useEffect has a missing dependency: 'act'. Either include it or remove the dependency array. If 'setMode' needs the current value of 'act', you can also switch to useReducer instead of useState and read 'act' in the reducer.",["156"],"React Hook useEffect has a missing dependency: 'mode'. Either include it or remove the dependency array.",["157"],"no-global-assign","no-unsafe-negation",{"desc":"158","fix":"159"},{"desc":"160","fix":"161"},{"desc":"162","fix":"163"},{"desc":"164","fix":"165"},{"desc":"166","fix":"167"},"Update the dependencies array to be: [location.pathname]",{"range":"168","text":"169"},"Update the dependencies array to be: [getData, url]",{"range":"170","text":"171"},"Update the dependencies array to be: [definition, mode]",{"range":"172","text":"173"},"Update the dependencies array to be: [act, show]",{"range":"174","text":"175"},"Update the dependencies array to be: [id, mode]",{"range":"176","text":"177"},[1068,1070],"[location.pathname]",[1131,1136],"[getData, url]",[1277,1283],"[definition, mode]",[1400,1406],"[act, show]",[1861,1865],"[id, mode]"]