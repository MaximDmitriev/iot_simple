[{"C:\\projects\\iot_simple\\front\\src\\index.tsx":"1","C:\\projects\\iot_simple\\front\\src\\App.tsx":"2","C:\\projects\\iot_simple\\front\\src\\services\\auth.ts":"3","C:\\projects\\iot_simple\\front\\src\\services\\common.ts":"4","C:\\projects\\iot_simple\\front\\src\\pages\\index.ts":"5","C:\\projects\\iot_simple\\front\\src\\pages\\404.tsx":"6","C:\\projects\\iot_simple\\front\\src\\pages\\main.tsx":"7","C:\\projects\\iot_simple\\front\\src\\pages\\login.tsx":"8","C:\\projects\\iot_simple\\front\\src\\pages\\style\\404-style.ts":"9","C:\\projects\\iot_simple\\front\\src\\pages\\style\\main-style.ts":"10","C:\\projects\\iot_simple\\front\\src\\pages\\style\\login-style.ts":"11","C:\\projects\\iot_simple\\front\\src\\services\\constants.ts":"12","C:\\projects\\iot_simple\\front\\src\\components\\navbar\\index.tsx":"13","C:\\projects\\iot_simple\\front\\src\\components\\report-container\\index.tsx":"14","C:\\projects\\iot_simple\\front\\src\\components\\navbar\\style.ts":"15","C:\\projects\\iot_simple\\front\\src\\components\\report-container\\style.ts":"16","C:\\projects\\iot_simple\\front\\src\\reducers\\index.ts":"17","C:\\projects\\iot_simple\\front\\src\\components\\list-report\\index.tsx":"18","C:\\projects\\iot_simple\\front\\src\\components\\error\\index.tsx":"19","C:\\projects\\iot_simple\\front\\src\\components\\error\\style.ts":"20","C:\\projects\\iot_simple\\front\\src\\components\\list-report\\style.ts":"21","C:\\projects\\iot_simple\\front\\src\\components\\list-report\\utils.ts":"22","C:\\projects\\iot_simple\\front\\src\\components\\list-report\\list-localization.ts":"23","C:\\projects\\iot_simple\\front\\src\\components\\modal\\index.tsx":"24","C:\\projects\\iot_simple\\front\\src\\components\\modal\\style.ts":"25","C:\\projects\\iot_simple\\front\\src\\components\\modal\\utils.ts":"26","C:\\projects\\iot_simple\\front\\src\\components\\modal\\modal-header.tsx":"27","C:\\projects\\iot_simple\\front\\src\\config.ts":"28","C:\\projects\\iot_simple\\front\\src\\components\\popup\\index.tsx":"29","C:\\projects\\iot_simple\\front\\src\\components\\widgets\\index.tsx":"30","C:\\projects\\iot_simple\\front\\src\\components\\widgets\\style.ts":"31","C:\\projects\\iot_simple\\front\\src\\components\\popup\\style.ts":"32","C:\\projects\\iot_simple\\front\\src\\components\\widgets\\image-picker\\index.tsx":"33","C:\\projects\\iot_simple\\front\\src\\components\\widgets\\image-picker\\style.ts":"34","C:\\projects\\iot_simple\\front\\src\\app.tsx":"35","C:\\projects\\iot_simple\\front\\src\\components\\widgets\\device-group\\index.tsx":"36","C:\\projects\\iot_simple\\front\\src\\components\\widgets\\device-group\\style.ts":"37","C:\\projects\\iot_simple\\front\\src\\components\\widgets\\device-group\\select-group\\index.tsx":"38","C:\\projects\\iot_simple\\front\\src\\components\\widgets\\device-group\\link-group\\index.tsx":"39","C:\\projects\\iot_simple\\front\\src\\components\\widgets\\device-group\\select-group\\style.ts":"40","C:\\projects\\iot_simple\\front\\src\\components\\widgets\\device-group\\link-group\\style.ts":"41","C:\\projects\\iot_simple\\front\\src\\services\\fetch-data.ts":"42"},{"size":362,"mtime":1661031254553,"results":"43","hashOfConfig":"44"},{"size":2479,"mtime":1660333901657,"results":"45","hashOfConfig":"46"},{"size":2216,"mtime":1660949254476,"results":"47","hashOfConfig":"44"},{"size":1553,"mtime":1660948532831,"results":"48","hashOfConfig":"44"},{"size":157,"mtime":1660425171935,"results":"49","hashOfConfig":"44"},{"size":741,"mtime":1660853879142,"results":"50","hashOfConfig":"44"},{"size":1527,"mtime":1660853901938,"results":"51","hashOfConfig":"44"},{"size":4960,"mtime":1661031152095,"results":"52","hashOfConfig":"44"},{"size":415,"mtime":1660510251786,"results":"53","hashOfConfig":"44"},{"size":207,"mtime":1660510296775,"results":"54","hashOfConfig":"44"},{"size":564,"mtime":1660510307849,"results":"55","hashOfConfig":"44"},{"size":521,"mtime":1660950538705,"results":"56","hashOfConfig":"44"},{"size":2638,"mtime":1660950828396,"results":"57","hashOfConfig":"44"},{"size":1699,"mtime":1660853650784,"results":"58","hashOfConfig":"44"},{"size":262,"mtime":1660424858491,"results":"59","hashOfConfig":"44"},{"size":626,"mtime":1660425001148,"results":"60","hashOfConfig":"44"},{"size":387,"mtime":1660423107243,"results":"61","hashOfConfig":"44"},{"size":2470,"mtime":1660853357351,"results":"62","hashOfConfig":"44"},{"size":429,"mtime":1660595769605,"results":"63","hashOfConfig":"44"},{"size":163,"mtime":1660422773271,"results":"64","hashOfConfig":"44"},{"size":449,"mtime":1660422808017,"results":"65","hashOfConfig":"44"},{"size":2538,"mtime":1660424692392,"results":"66","hashOfConfig":"44"},{"size":2407,"mtime":1660424552734,"results":"67","hashOfConfig":"44"},{"size":5260,"mtime":1660853394771,"results":"68","hashOfConfig":"44"},{"size":1305,"mtime":1660422888301,"results":"69","hashOfConfig":"44"},{"size":2039,"mtime":1660510177460,"results":"70","hashOfConfig":"44"},{"size":2627,"mtime":1660853414914,"results":"71","hashOfConfig":"44"},{"size":178,"mtime":1660423184675,"results":"72","hashOfConfig":"44"},{"size":1176,"mtime":1660853585535,"results":"73","hashOfConfig":"44"},{"size":1915,"mtime":1660853828238,"results":"74","hashOfConfig":"44"},{"size":1033,"mtime":1660510264706,"results":"75","hashOfConfig":"44"},{"size":204,"mtime":1660424914731,"results":"76","hashOfConfig":"44"},{"size":413,"mtime":1660596860005,"results":"77","hashOfConfig":"44"},{"size":908,"mtime":1660510280653,"results":"78","hashOfConfig":"44"},{"size":2284,"mtime":1661031461100,"results":"79","hashOfConfig":"44"},{"size":342,"mtime":1660596742533,"results":"80","hashOfConfig":"44"},{"size":197,"mtime":1660510320125,"results":"81","hashOfConfig":"44"},{"size":1675,"mtime":1660853715761,"results":"82","hashOfConfig":"44"},{"size":689,"mtime":1660596660712,"results":"83","hashOfConfig":"44"},{"size":342,"mtime":1660425099594,"results":"84","hashOfConfig":"44"},{"size":1166,"mtime":1660425063213,"results":"85","hashOfConfig":"44"},{"size":2444,"mtime":1660947432519,"results":"86","hashOfConfig":"44"},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"n5oyui",{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"vohc9d",{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"98","messages":"99","errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"97"},{"filePath":"101","messages":"102","errorCount":3,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"97"},{"filePath":"104","messages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"111","messages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"113","messages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","errorCount":3,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"97"},{"filePath":"120","messages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"122","messages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"124","messages":"125","errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"97"},{"filePath":"127","messages":"128","errorCount":2,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"97"},{"filePath":"130","messages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"132","messages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"134","messages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"136","messages":"137","errorCount":15,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"97"},{"filePath":"139","messages":"140","errorCount":3,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"108"},{"filePath":"142","messages":"143","errorCount":23,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"97"},{"filePath":"145","messages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"147","messages":"148","errorCount":12,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"97"},{"filePath":"150","messages":"151","errorCount":4,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"97"},{"filePath":"153","messages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"155","messages":"156","errorCount":2,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"97"},{"filePath":"158","messages":"159","errorCount":5,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"97"},{"filePath":"161","messages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"163","messages":"164","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"165","messages":"166","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"167","messages":"168","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"169","messages":"170","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"171","messages":"172","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"173","messages":"174","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"175","messages":"176","errorCount":7,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"97"},{"filePath":"178","messages":"179","errorCount":3,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"97"},{"filePath":"181","messages":"182","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"183","messages":"184","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"185","messages":"186","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\projects\\iot_simple\\front\\src\\index.tsx",[],"C:\\projects\\iot_simple\\front\\src\\App.tsx",[],"C:\\projects\\iot_simple\\front\\src\\services\\auth.ts",[],"C:\\projects\\iot_simple\\front\\src\\services\\common.ts",[],"C:\\projects\\iot_simple\\front\\src\\pages\\index.ts",[],["187","188"],"C:\\projects\\iot_simple\\front\\src\\pages\\404.tsx",["189"],"// @ts-nocheck\nimport { Button, Paper, Typography } from '@mui/material';\nimport { Link } from 'react-router-dom';\nimport Navbar from '../components/navbar';\n\nexport const NotFoundPage = () => (\n  <>\n    <Navbar title={''} />\n    <Paper elevation={5}>\n      <Typography align={'center'} variant={'h6'}>\n        Страница не найдена\n      </Typography>\n      <Typography align={'center'} variant={'body1'}>\n        Запрашиваемая страница не существует, проверьте правильность адреса\n      </Typography>\n      <Link to=\"/report\">\n        <Button color=\"primary\" variant=\"contained\">\n          На главную\n        </Button>\n      </Link>\n    </Paper>\n  </>\n);\n","C:\\projects\\iot_simple\\front\\src\\pages\\main.tsx",["190","191","192"],"// @ts-nocheck\nimport { useEffect, useState } from 'react';\nimport { Paper, Typography } from '@mui/material';\nimport { useLocation } from 'react-router-dom';\nimport { useAuth } from '../app';\nimport Navbar from '../components/navbar';\nimport { ReportContainer } from '../components/report-container';\nimport { getCookie } from '../services/common';\nimport { roots } from '../services/constants';\n\nexport const MainPage = () => {\n  const location = useLocation();\n  const auth = useAuth();\n  const userCookie = getCookie('current_user');\n  const user = userCookie ? JSON.parse(userCookie) : auth.user;\n\n  const [report, setReport] = useState({\n    type: 'start',\n    name: 'Основная панель',\n  });\n\n  useEffect(() => {\n    const restUrl = location.pathname.split('/');\n\n    if (restUrl[1] === 'report' && restUrl[2]) {\n      chooseReport(restUrl[2]);\n    }\n  }, []);\n\n  const chooseReport = item => {\n    const currentReport = roots.find(r => r.url === item);\n\n    if (currentReport) {\n      setReport({ type: currentReport.url, name: currentReport.name });\n    }\n  };\n\n  return (\n    <>\n      <Navbar showBtn name={user.name || user.username || ''} title={report.name} onSelectItem={chooseReport} />\n      {report.type === 'start' ? (\n        <Paper elevation={5}>\n          <Typography align={'center'} variant={'body1'}>\n            Выберите в меню нужный отчет\n          </Typography>\n        </Paper>\n      ) : (\n        <ReportContainer url={report.type} />\n      )}\n    </>\n  );\n};\n","C:\\projects\\iot_simple\\front\\src\\pages\\login.tsx",[],"C:\\projects\\iot_simple\\front\\src\\pages\\style\\404-style.ts",[],["193","194"],"C:\\projects\\iot_simple\\front\\src\\pages\\style\\main-style.ts",[],"C:\\projects\\iot_simple\\front\\src\\pages\\style\\login-style.ts",[],"C:\\projects\\iot_simple\\front\\src\\services\\constants.ts",[],"C:\\projects\\iot_simple\\front\\src\\components\\navbar\\index.tsx",[],"C:\\projects\\iot_simple\\front\\src\\components\\report-container\\index.tsx",["195","196","197"],"// @ts-nocheck\nimport { useEffect, useReducer } from 'react';\nimport { LinearProgress } from '@mui/material';\nimport { reportReducer } from '../../reducers';\nimport { fetchService } from '../../services/fetch-data';\nimport { ErrorComponent } from '../error';\nimport { ListReport } from '../list-report';\n\nconst REPORT_NOT_IMPLEMENTED_MSG = 'Отчет не готов к использованию, выберите другой отчет';\nconst initState = {\n  loaded: false,\n  type: null,\n  data: null,\n  metadata: null,\n  error: null,\n};\n\nexport const ReportContainer = ({ url }) => {\n  const [state, dispatch] = useReducer(reportReducer, initState);\n\n  const getData = () => {\n    dispatch({ type: 'fetchRequest' });\n    fetchService\n      .getReport(url)\n      .then(res => {\n        if (res) {\n          dispatch({ type: 'fetchSuccess', payload: res });\n        } else {\n          console.log('error', res);\n          dispatch({ type: 'fetchFailure', payload: { error: 'error' } });\n        }\n      })\n      .catch(err => {\n        console.log(err);\n        dispatch({ type: 'fetchFailure', payload: { error: err } });\n      });\n  };\n\n  useEffect(() => {\n    getData();\n  }, [url]);\n\n  const updateReport = () => {\n    getData();\n  };\n\n  if (state.loaded && state.error) {\n    return (\n      <div>\n        <ErrorComponent message={REPORT_NOT_IMPLEMENTED_MSG} />\n      </div>\n    );\n  }\n\n  return (\n    <>\n      {state.data ? (\n        <div>{state.type === 'LIST' ? <ListReport data={state.data} metadata={state.metadata} update={updateReport} /> : null}</div>\n      ) : null}\n      {!state.loaded ? (\n        <div>\n          <LinearProgress />\n        </div>\n      ) : null}\n    </>\n  );\n};\n","C:\\projects\\iot_simple\\front\\src\\components\\navbar\\style.ts",[],"C:\\projects\\iot_simple\\front\\src\\components\\report-container\\style.ts",[],"C:\\projects\\iot_simple\\front\\src\\reducers\\index.ts",["198"],"export const reportReducer = (state, { type, payload }) => {\n  switch (type) {\n    case 'fetchRequest':\n      return { ...state, loaded: false };\n    case 'fetchSuccess':\n      return { loaded: true, metadata: payload.metadata, data: payload.data, type: payload.metadata.type, error: null };\n    case 'fetchFailure':\n      return { ...state, error: payload.error, loaded: true };\n  }\n};\n","C:\\projects\\iot_simple\\front\\src\\components\\list-report\\index.tsx",["199","200"],"// @ts-nocheck\nimport React, { useState, useMemo, useCallback } from 'react';\n// import { DataGrid } from '@material-ui/data-grid';\nimport { LibraryAdd } from '@mui/icons-material';\nimport { IconButton, Tooltip } from '@mui/material';\nimport { ModalWrapper } from '../modal';\n// import { localeText } from './list-localization';\nimport { getFormDefinition } from './utils';\n\n/**\n * - создание компонента.\n * - null вместо update.\n */\n// TODO создать контейнер для логики\n\n/** Компонент список (таблица). */\nexport const ListReport: React.FC<{ data: any; metadata: any; update(): void }> = ({ data, metadata, update }) => {\n  // const columns = useMemo(() => getColumns(metadata), [metadata]);\n  // const rows = useMemo(() => formatData(data, columns), [data, columns]);\n  const { definition, totalHeight } = useMemo(() => getFormDefinition(metadata), [metadata]);\n\n  const [modalParams, setModalParams] = useState({ open: false, mode: 'update', id: null });\n\n  // const onClickHandler = useCallback((e: GridRowParams) => {\n  //   const id = e.getValue('id');\n  //\n  //   setModalParams({ open: true, mode: 'update', id });\n  // }, []);\n\n  const closeModal = useCallback(() => {\n    setModalParams({ open: false, mode: 'update', id: null });\n    update();\n  }, [update]);\n\n  const createRecord = () => {\n    setModalParams({ open: true, mode: 'create', id: null });\n  };\n\n  return (\n    <div>\n      <Tooltip title=\"Добавить запись\">\n        <IconButton aria-label=\"add record\" color=\"primary\" onClick={createRecord}>\n          <LibraryAdd />\n        </IconButton>\n      </Tooltip>\n\n      {/* <DataGrid */}\n      {/*  autoHeight */}\n      {/*  disableSelectionOnClick */}\n      {/*  hideFooterSelectedRowCount */}\n      {/*  showCellRightBorder */}\n      {/*  showColumnRightBorder */}\n      {/*  showToolbar */}\n      {/*  columns={columns} */}\n      {/*  headerHeight={45} */}\n      {/*  localeText={localeText} */}\n      {/*  rowHeight={40} */}\n      {/*  rows={rows} */}\n      {/*  onRowClick={onClickHandler} */}\n      {/* /> */}\n      <ModalWrapper\n        act={modalParams.mode}\n        definition={definition}\n        height={totalHeight}\n        id={modalParams.id}\n        show={modalParams.open}\n        tableName={metadata.tablename}\n        title={metadata.singleTitle}\n        titleField={metadata.singleTitleField}\n        onClose={closeModal}\n      />\n    </div>\n  );\n};\n","C:\\projects\\iot_simple\\front\\src\\components\\error\\index.tsx",[],"C:\\projects\\iot_simple\\front\\src\\components\\error\\style.ts",[],"C:\\projects\\iot_simple\\front\\src\\components\\list-report\\style.ts",[],"C:\\projects\\iot_simple\\front\\src\\components\\list-report\\utils.ts",["201","202","203","204","205","206","207","208","209","210","211","212","213","214","215"],"import dayjs from 'dayjs';\n\nconst ROW_HEIGHT = 85;\nconst NUMBER_COLUMNS = 12;\n\nconst convertWidth = str => {\n  const index = str.indexOf('px');\n\n  return +str.substring(0, index);\n};\n\nexport const getColumns = ({ definition }) => {\n  const columns = definition.columns\n    .filter(col => col.visible)\n    .reduce(\n      (acc, col) =>\n        acc.concat([\n          {\n            field: col.systemname || col.name,\n            headerName: col.name,\n            width: convertWidth(col.width),\n            hidden: !col.visible,\n            order: col.order,\n            style: col.style || null,\n          },\n        ]),\n      []\n    )\n    .sort((a, b) => {\n      if (a.order < b.order) return -1;\n\n      return 1;\n    });\n\n  columns[columns.length - 1].flex = 1;\n\n  return columns;\n};\n\nconst formatCell = (row, stylesMap) => {\n  Object.keys(row).map(name => {\n    if (stylesMap[name] && stylesMap[name] === 'datetime') {\n      row[name] = dayjs(row[name]).format('DD/MM/YYYY HH:mm');\n    }\n  });\n\n  return row;\n};\n\nexport const formatData = (data, columns) => {\n  const stylesMap = columns.reduce((acc, col) => {\n    if (col.style) acc[col.field] = col.style;\n\n    return acc;\n  }, {});\n\n  return data.map(row => formatCell(row, stylesMap));\n};\n\nexport const getFormDefinition = ({ definition: { columns } }) => {\n  const rowPositions = columns.reduce((obj, widget) => {\n    if (!obj[widget.position[1]] || obj[widget.position[1]] < widget.size[1]) {\n      obj[widget.position[1]] = widget.size[1];\n    }\n\n    return obj;\n  }, {});\n  const maxRowNumber = Math.max(...Object.keys(rowPositions).map(k => parseInt(k)));\n\n  // общая высота сетки\n  const totalHeight =\n    rowPositions[maxRowNumber] > 1 ? (maxRowNumber + rowPositions[maxRowNumber]) * ROW_HEIGHT : (maxRowNumber + 1) * ROW_HEIGHT;\n\n  // параметры одной ячейки в процентах\n  const colHeight = (100 * ROW_HEIGHT) / totalHeight;\n  const colWidth = 100 / NUMBER_COLUMNS;\n\n  const definition = columns\n    .filter(c => c.show_in_form)\n    .map(c => ({\n      fieldName: c.systemname,\n      label: c.name || c.systemname,\n      fieldFormat: c.style,\n      pattern: c.pattern || null,\n      readonly: c.readonly || false,\n      required: c.required || false,\n      onlyCreatedMode: c.onlyCreated || null,\n      width: `${colWidth * c.size[0]}%`,\n      height: `${colHeight * c.size[1]}%`,\n      top: c.position[1] * colHeight + '%',\n      left: c.position[0] * colWidth + '%',\n    }));\n\n  return {\n    totalHeight,\n    definition,\n  };\n};\n","C:\\projects\\iot_simple\\front\\src\\components\\list-report\\list-localization.ts",["216","217","218"],"const SHOW_FILTERS = 'Показать фильтры';\n\nexport const localeText = {\n  // Root\n  rootGridLabel: 'grid',\n\n  // Density selector toolbar button text\n  toolbarDensity: 'Плотность',\n  toolbarDensityLabel: 'Плотность',\n  toolbarDensityCompact: 'Компакт',\n  toolbarDensityStandard: 'Стандарт',\n  toolbarDensityComfortable: 'Комфорт',\n\n  // Columns selector toolbar button text\n  toolbarColumns: 'Колонки',\n  toolbarColumnsLabel: 'Показать выбор колонок',\n\n  // Filters toolbar button text\n  toolbarFilters: 'Фильтры',\n  toolbarFiltersLabel: SHOW_FILTERS,\n  toolbarFiltersTooltipHide: 'Спрятать фильтры',\n  toolbarFiltersTooltipShow: SHOW_FILTERS,\n  toolbarFiltersTooltipActive: count => `${count} активных фильтров`,\n\n  // Columns panel text\n  columnsPanelTextFieldLabel: 'Найти колонку',\n  columnsPanelTextFieldPlaceholder: 'Заголовок колонки',\n  columnsPanelDragIconLabel: 'Поменять порядок',\n  columnsPanelShowAllButton: 'Показать все',\n  columnsPanelHideAllButton: 'Скрыть все',\n\n  // Filter panel text\n  filterPanelAddFilter: 'Добавить фильтр',\n  filterPanelDeleteIconLabel: 'Удалить',\n  filterPanelOperators: 'Операторы',\n  filterPanelOperatorAnd: 'И',\n  filterPanelOperatorOr: 'ИЛИ',\n  filterPanelColumns: 'Колонки',\n\n  // Column menu text\n  columnMenuLabel: 'Меню',\n  columnMenuShowColumns: 'Показать колонки',\n  columnMenuFilter: 'Фильтр',\n  columnMenuHideColumn: 'Скрыть',\n  columnMenuUnsort: 'Отменить сортировку',\n  columnMenuSortAsc: 'Сорт. по возрастающей',\n  columnMenuSortDesc: 'Сорт. по убывающей',\n\n  // Column header text\n  columnHeaderFiltersTooltipActive: count => `${count} активных фильтров`,\n  columnHeaderFiltersLabel: SHOW_FILTERS,\n  columnHeaderSortIconLabel: 'Сортировать',\n\n  // Rows selected footer text\n  footerRowSelected: count => (count !== 1 ? `${count.toLocaleString()} выделенных строк` : `${count.toLocaleString()} выделенная строка`),\n\n  // Total rows footer text\n  footerTotalRows: 'Всего строк:',\n\n  // Pagination footer text\n  footerPaginationRowsPerPage: 'Строк на странице:',\n};\n","C:\\projects\\iot_simple\\front\\src\\components\\modal\\index.tsx",["219","220","221","222","223","224","225","226","227","228","229","230","231","232","233","234","235","236","237","238","239","240","241"],"// @ts-nocheck\nimport { useEffect, useMemo, useState } from 'react';\nimport { Backdrop, Modal, Skeleton, Slide, Typography } from '@mui/material';\nimport dayjs from 'dayjs';\nimport { useSnackbar } from 'notistack';\nimport { fetchService } from '../../services/fetch-data';\nimport { PopupComponent } from '../popup';\nimport { WidgetContainer } from '../widgets';\nimport { ModalHeader } from './modal-header';\nimport { getSuccessMessage, getErrorMessage, createBody, defineMethod, updateSensors } from './utils';\n\nexport const ModalWrapper = ({ show, act, onClose, title, titleField, tableName, id, height, definition }) => {\n  const [data, setData] = useState({});\n  const [status, setStatus] = useState('loading'); // loaded, error\n  const [popupOpen, setPopupOpen] = useState(false);\n  const [mode, setMode] = useState(act);\n  const { enqueueSnackbar } = useSnackbar();\n\n  const formDefinition = useMemo(() => (mode === 'create' ? definition : definition.filter(c => !c.onlyCreatedMode)), [mode, definition]);\n\n  const openPopup = () => {\n    setPopupOpen(true);\n  };\n\n  const onCloseHandler = () => {\n    setStatus('loading');\n    setData({});\n    onClose();\n  };\n\n  const declineHandler = () => {\n    setPopupOpen(false);\n  };\n\n  const updateWidgetData = (e, val, fieldName, fieldFormat) => {\n    switch (fieldFormat) {\n      case 'text':\n        setData(data => ({ ...data, [fieldName]: val }));\n        break;\n      case 'datetime':\n        setData(data => ({ ...data, [fieldName]: dayjs(e).valueOf() }));\n        break;\n      case 'deviceGroup':\n        if (!data[fieldName]) {\n          setData(data => ({ ...data, [fieldName]: [val] }));\n        } else if (data[fieldName].includes(val)) {\n          const idx = data[fieldName].indexOf(val);\n          const values = [...data[fieldName].slice(0, idx), ...data[fieldName].slice(idx + 1)];\n\n          setData(data => ({ ...data, [fieldName]: values }));\n        } else {\n          setData(data => ({ ...data, [fieldName]: data[fieldName].concat(val) }));\n        }\n\n        break;\n      default:\n        setData(data => ({ ...data, [fieldName]: val }));\n    }\n  };\n\n  useEffect(() => {\n    setMode(act);\n\n    if (act === 'create') {\n      setStatus('loaded');\n    }\n  }, [show]);\n\n  useEffect(() => {\n    if (mode === 'update' && id) {\n      setStatus('loading');\n      readRecord();\n    }\n\n    return () => {\n      // console.log('unmount');\n    };\n  }, [id]);\n\n  const readRecord = () => {\n    fetchService\n      .getOneRecord(tableName, id)\n      .then(res => {\n        setData(res);\n        setTimeout(() => {\n          // setTimeout для лоадера\n          setStatus('loaded');\n        }, 500);\n      })\n      .catch(err => {\n        console.log(err);\n        setStatus('error');\n      });\n  };\n\n  const changeRecord = type => {\n    const body = createBody(type, data);\n    const method = defineMethod(type);\n\n    updateSensors(enqueueSnackbar, type, tableName, data).then(() => {\n      fetchService.data(body);\n      method\n        .call(fetchService, tableName)\n        .then(res => {\n          if (res.errors) {\n            getErrorMessage(enqueueSnackbar, type, res.message);\n          } else {\n            if (type === 'create') {\n              setData(res);\n              setMode('update');\n            } else if (type === 'delete') {\n              setStatus('loading');\n              setData({});\n              onClose();\n            }\n\n            getSuccessMessage(enqueueSnackbar, type, data[titleField]);\n          }\n        })\n        .catch(err => {\n          console.log(err);\n          getErrorMessage(enqueueSnackbar, type, err.message);\n        });\n\n      if (type === 'delete') setPopupOpen(false);\n    });\n  };\n\n  return (\n    <div>\n      <PopupComponent open={popupOpen} onAccept={() => changeRecord('delete')} onCancel={declineHandler} />\n      <Modal\n        closeAfterTransition\n        BackdropComponent={Backdrop}\n        BackdropProps={{\n          timeout: 500,\n        }}\n        open={show}\n        onClose={onCloseHandler}\n      >\n        <Slide mountOnEnter unmountOnExit direction=\"down\" in={show}>\n          <div>\n            <ModalHeader\n              changeRecord={changeRecord}\n              data={data}\n              mode={mode}\n              openPopup={openPopup}\n              status={status}\n              tableName={tableName}\n              title={title}\n              titleField={titleField}\n            />\n            <div style={{ height: height + 'px' }}>\n              {formDefinition.map((cell, idx) => (\n                <div\n                  key={idx}\n                  style={{\n                    height: cell.height,\n                    width: cell.width,\n                    top: cell.top,\n                    left: cell.left,\n                  }}\n                >\n                  <Typography> {cell.label}</Typography>\n                  {status === 'loading' ? (\n                    <Skeleton height=\"40px\" variant=\"rect\" width=\"100%\" />\n                  ) : (\n                    <WidgetContainer data={data[cell.fieldName] || null} definition={cell} updateData={updateWidgetData} />\n                  )}\n                </div>\n              ))}\n            </div>\n          </div>\n        </Slide>\n      </Modal>\n    </div>\n  );\n};\n","C:\\projects\\iot_simple\\front\\src\\components\\modal\\style.ts",[],"C:\\projects\\iot_simple\\front\\src\\components\\modal\\utils.ts",["242","243","244","245","246","247","248","249","250","251","252","253"],"import { Constants, Names } from '../../config';\nimport { fetchService } from '../../services/fetch-data';\n\nexport const getErrorMessage = (alert, type, msg) => {\n  const TIME = 8000;\n\n  const getAction = type => {\n    switch (type) {\n      case 'update':\n        return 'сохранить';\n      case 'delete':\n        return 'удалить';\n      case 'create':\n        return 'создать';\n    }\n  };\n\n  alert(`Не удалось ${getAction(type)} запись. ${msg}`, { variant: 'error', autoHideDuration: TIME });\n};\n\nexport const getSuccessMessage = (alert, type, msg) => {\n  const TIME = 5000;\n\n  const getAction = type => {\n    switch (type) {\n      case 'update':\n        return 'сохранена';\n      case 'delete':\n        return 'удалена';\n      case 'create':\n        return 'создана';\n    }\n  };\n\n  alert(`Запись ${msg} успешно ${getAction(type)}`, { variant: 'success', autoHideDuration: TIME });\n};\n\nexport const createBody = (type, data) => {\n  switch (type) {\n    case 'update':\n      return { id: data.id, fields: data };\n    case 'delete':\n      return { id: data.id };\n    case 'create':\n      return data;\n  }\n};\n\nexport const defineMethod = type => {\n  switch (type) {\n    case 'update':\n      return fetchService.updateRecord;\n    case 'create':\n      return fetchService.createRecord;\n    case 'delete':\n      return fetchService.deleteRecord;\n  }\n};\n\nexport const updateSensors = (enqueueSnackbar, type, tableName, data) =>\n  new Promise<void>(resolve => {\n    if (type !== 'delete' && tableName === Names.DevicesTableName && data[Names.SensorsFieldName]) {\n      const ids = data[Names.SensorsFieldName].map(name => name.split(Constants.PairSeparator)[1]);\n\n      fetchService\n        .data({ cluster: data[Names.ClusterFieldName], ids })\n        .setClusterSensors()\n        .then(() => resolve())\n        .catch(err => {\n          console.log(err);\n          getErrorMessage(enqueueSnackbar, type, err.message);\n        });\n    } else {\n      resolve();\n    }\n  });\n","C:\\projects\\iot_simple\\front\\src\\components\\modal\\modal-header.tsx",["254","255","256","257"],"// @ts-nocheck\nimport { useEffect, useState } from 'react';\nimport { PowerOff, Power, Memory } from '@mui/icons-material';\nimport { AppBar, Button, Skeleton, Typography } from '@mui/material';\nimport { fetchService } from '../../services/fetch-data';\n\nconst StatusText = ({ tableName, state }) => (\n  <div>\n    {tableName === 'relays' ? (\n      <>\n        {state ? <Power /> : <PowerOff />}\n        <Typography>статус: {state ? 'включен' : 'выключен'}</Typography>\n      </>\n    ) : (\n      <>\n        <Memory />\n        <Typography>статус: {state || 'неактивирован'}</Typography>\n      </>\n    )}\n  </div>\n);\n\nexport const ModalHeader = props => {\n  const { title, status, data, mode, titleField, tableName, openPopup, changeRecord } = props;\n  const [state, setState] = useState(data.state);\n\n  useEffect(() => {\n    setState(data.state);\n  }, [data.id]);\n\n  const switchRelay = () => {\n    const body = { id: data.sensorId, cluster: data.clusterId, state: Number(!state) };\n\n    fetchService\n      .data(body)\n      .switchRelay()\n      .then(res => {\n        const relayKey = Object.keys(res)\n          .filter(k => k !== 'message')\n          .find(k => res[k].sensorId === data.sensorId);\n\n        if (res[relayKey]) {\n          setState(res[relayKey].value);\n        }\n      })\n      .catch(err => console.error(err));\n    // @TODO при статусе 405 в catch не уходит\n  };\n\n  return (\n    <AppBar position=\"static\">\n      <div>\n        <div>\n          <Typography>{title}:</Typography>\n          <Typography>\n            {status === 'loading' || status === 'error' ? (\n              <Skeleton variant=\"text\" />\n            ) : mode === 'update' ? (\n              `${data[titleField]} ${data.sensorId || data.deviceId || ''}`\n            ) : (\n              ''\n            )}\n          </Typography>\n        </div>\n        {['relays', 'sensors'].includes(tableName) && <StatusText state={state} tableName={tableName} />}\n      </div>\n      <div>\n        {mode === 'update' && tableName === 'relays' ? (\n          <Button color=\"primary\" variant=\"contained\" onClick={switchRelay}>\n            {state ? 'Выключить' : 'Включить'}\n          </Button>\n        ) : null}\n        {mode === 'update' ? (\n          <Button color=\"secondary\" variant=\"contained\" onClick={openPopup}>\n            Удалить запись\n          </Button>\n        ) : null}\n        <Button variant=\"contained\" onClick={() => changeRecord(mode)}>\n          {mode === 'update' ? 'Сохранить' : 'Создать'}\n        </Button>\n      </div>\n    </AppBar>\n  );\n};\n","C:\\projects\\iot_simple\\front\\src\\config.ts",[],"C:\\projects\\iot_simple\\front\\src\\components\\popup\\index.tsx",["258","259"],"// @ts-nocheck\nimport React from 'react';\nimport { Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, Slide, Button } from '@mui/material';\n\nconst Transition = React.forwardRef((props, ref) => <Slide ref={ref} direction=\"down\" {...props} />);\n\nexport const PopupComponent = ({ open, onAccept, onCancel }) => (\n  <Dialog\n    disableBackdropClick\n    keepMounted\n    TransitionComponent={Transition}\n    aria-describedby=\"alert-dialog-slide-description\"\n    aria-labelledby=\"alert-dialog-slide-title\"\n    open={open}\n  >\n    <DialogTitle id=\"alert-dialog-slide-title\">Удалить запись?</DialogTitle>\n    <DialogContent>\n      <DialogContentText id=\"alert-dialog-slide-description\">\n        Данная запись будет удалена из базы данных без возможности восстановления\n      </DialogContentText>\n    </DialogContent>\n    <DialogActions>\n      <Button color=\"primary\" variant=\"outlined\" onClick={onCancel}>\n        Отмена\n      </Button>\n      <Button color=\"secondary\" variant=\"outlined\" onClick={onAccept}>\n        Удалить\n      </Button>\n    </DialogActions>\n  </Dialog>\n);\n","C:\\projects\\iot_simple\\front\\src\\components\\widgets\\index.tsx",["260","261","262","263","264"],"// @ts-nocheck\nimport { Autocomplete, TextField } from '@mui/material';\nimport { DateTimePicker } from '@mui/x-date-pickers';\nimport { DeviceGroup } from './device-group';\nimport { ImagePicker } from './image-picker';\n\nexport const WidgetContainer = ({ definition, data, updateData }) => {\n  switch (definition.fieldFormat) {\n    case 'text':\n      return (\n        <TextField\n          fullWidth\n          defaultValue={data}\n          disabled={definition.readonly}\n          required={definition.required}\n          variant=\"outlined\"\n          onBlur={e => updateData(e, e.target.value, definition.fieldName, definition.fieldFormat)}\n        />\n      );\n    case 'combobox':\n      return (\n        <Autocomplete\n          fullWidth\n          disabled={definition.readonly}\n          options={definition.pattern}\n          renderInput={props => <TextField {...props} variant=\"outlined\" />}\n          required={definition.required}\n          value={data}\n          onChange={(e, value) => updateData(e, value, definition.fieldName, definition.fieldFormat)}\n        />\n      );\n    case 'datetime':\n      return (\n        <DateTimePicker\n          fullWidth\n          ampm={false}\n          format=\"MM/DD/YYYY HH:mm\"\n          inputVariant=\"outlined\"\n          readOnly={definition.readonly}\n          required={definition.required}\n          value={data}\n          onChange={(e, value) => updateData(e, value, definition.fieldName, definition.fieldFormat)}\n        />\n      );\n    case 'textarea':\n      return <textarea defaultValue={data} onBlur={e => updateData(e, e.target.value, definition.fieldName, definition.fieldFormat)} />;\n    case 'image':\n      return <ImagePicker />;\n    case 'deviceGroup':\n      return <DeviceGroup data={data} definition={definition} updateData={updateData} />;\n    default:\n      return (\n        <div>\n          {definition.fieldFormat}: {data}\n        </div>\n      );\n  }\n};\n","C:\\projects\\iot_simple\\front\\src\\components\\widgets\\style.ts",[],"C:\\projects\\iot_simple\\front\\src\\components\\popup\\style.ts",[],"C:\\projects\\iot_simple\\front\\src\\components\\widgets\\image-picker\\index.tsx",[],"C:\\projects\\iot_simple\\front\\src\\components\\widgets\\image-picker\\style.ts",[],"C:\\projects\\iot_simple\\front\\src\\app.tsx",[],"C:\\projects\\iot_simple\\front\\src\\components\\widgets\\device-group\\index.tsx",[],"C:\\projects\\iot_simple\\front\\src\\components\\widgets\\device-group\\style.ts",[],"C:\\projects\\iot_simple\\front\\src\\components\\widgets\\device-group\\select-group\\index.tsx",["265","266","267","268","269","270","271"],"// @ts-nocheck\nimport { useEffect, useState } from 'react';\nimport { Autocomplete, Button, TextField } from '@mui/material';\nimport { Constants } from '../../../../config';\nimport { fetchService } from '../../../../services/fetch-data';\n\nexport const SelectGroup = ({ contents, updateData, definition }) => {\n  const [open, setOpen] = useState(false);\n  const [options, setOptions] = useState([]);\n  const [value, setValue] = useState(null);\n\n  useEffect(() => {\n    let active = true;\n\n    if (open) {\n      (async () => {\n        const res = await fetchService.getFreeSensors();\n\n        if (active) {\n          const pickedValues = contents || [];\n\n          setOptions(res.filter(o => !pickedValues.includes(o)));\n        }\n      })();\n    }\n\n    return () => {\n      active = false;\n    };\n  }, [open]);\n\n  const onClickHandler = () => {\n    updateData(null, value, definition.fieldName, definition.fieldFormat);\n    setValue(null);\n  };\n\n  return (\n    <div>\n      <Autocomplete\n        blurOnSelect\n        clearText=\"очистить\"\n        closeText=\"закрыть\"\n        getOptionLabel={o => o.split(Constants.PairSeparator)[0]}\n        noOptionsText=\"нет доступных элементов\"\n        openText=\"открыть\"\n        options={options}\n        renderInput={params => <TextField {...params} label=\"Элемент\" variant=\"outlined\" />}\n        value={value}\n        onChange={(_, v) => setValue(v)}\n        onClose={() => setOpen(false)}\n        onOpen={() => setOpen(true)}\n      />\n      <Button color=\"primary\" disabled={!value} variant=\"contained\" onClick={onClickHandler}>\n        Добавить\n      </Button>\n    </div>\n  );\n};\n","C:\\projects\\iot_simple\\front\\src\\components\\widgets\\device-group\\link-group\\index.tsx",["272","273","274"],"import React from 'react';\nimport { Backspace } from '@mui/icons-material';\nimport { Constants } from '../../../../config';\n\nconst LinkElement = ({ el, definition, updateData }) => (\n  <div>\n    {el.split(Constants.PairSeparator)[0]}\n    <div>\n      <Backspace onClick={() => updateData(null, el, definition.fieldName, definition.fieldFormat)} />\n    </div>\n  </div>\n);\nconst MemoLinkElement = React.memo(LinkElement);\n\nexport const LinkGroup = ({ contents, definition, updateData }) => (\n  <div>\n    <ul>\n      {contents?.map(el => (\n        <li key={el}>\n          <MemoLinkElement definition={definition} el={el} updateData={updateData} />\n        </li>\n      ))}\n    </ul>\n  </div>\n);\n","C:\\projects\\iot_simple\\front\\src\\components\\widgets\\device-group\\select-group\\style.ts",[],"C:\\projects\\iot_simple\\front\\src\\components\\widgets\\device-group\\link-group\\style.ts",[],"C:\\projects\\iot_simple\\front\\src\\services\\fetch-data.ts",[],{"ruleId":"275","replacedBy":"276"},{"ruleId":"277","replacedBy":"278"},{"ruleId":"279","severity":2,"message":"280","line":1,"column":1,"nodeType":"281","messageId":"282","endLine":1,"endColumn":15},{"ruleId":"279","severity":2,"message":"280","line":1,"column":1,"nodeType":"281","messageId":"282","endLine":1,"endColumn":15},{"ruleId":"283","severity":2,"message":"284","line":26,"column":7,"nodeType":"285","messageId":"286","endLine":26,"endColumn":19},{"ruleId":"287","severity":2,"message":"288","line":28,"column":6,"nodeType":"289","endLine":28,"endColumn":8,"suggestions":"290"},{"ruleId":"275","replacedBy":"291"},{"ruleId":"277","replacedBy":"292"},{"ruleId":"279","severity":2,"message":"280","line":1,"column":1,"nodeType":"281","messageId":"282","endLine":1,"endColumn":15},{"ruleId":"287","severity":2,"message":"293","line":41,"column":6,"nodeType":"289","endLine":41,"endColumn":11,"suggestions":"294"},{"ruleId":"295","severity":2,"message":"296","line":60,"column":8,"nodeType":"297","messageId":"298","endLine":64,"endColumn":15},{"ruleId":"299","severity":2,"message":"300","line":2,"column":3,"nodeType":"301","messageId":"302","endLine":9,"endColumn":4},{"ruleId":"279","severity":2,"message":"280","line":1,"column":1,"nodeType":"281","messageId":"282","endLine":1,"endColumn":15},{"ruleId":"303","severity":2,"message":"304","line":17,"column":86,"nodeType":"285","messageId":"305","endLine":17,"endColumn":90},{"ruleId":"306","severity":2,"message":"307","line":7,"column":17,"nodeType":"308","messageId":"309","endLine":7,"endColumn":28},{"ruleId":"306","severity":2,"message":"307","line":9,"column":11,"nodeType":"308","messageId":"309","endLine":9,"endColumn":24},{"ruleId":"306","severity":2,"message":"307","line":13,"column":19,"nodeType":"308","messageId":"309","endLine":29,"endColumn":10},{"ruleId":"306","severity":2,"message":"307","line":13,"column":19,"nodeType":"308","messageId":"309","endLine":15,"endColumn":12},{"ruleId":"306","severity":2,"message":"307","line":13,"column":19,"nodeType":"308","messageId":"309","endLine":14,"endColumn":12},{"ruleId":"306","severity":2,"message":"307","line":17,"column":9,"nodeType":"308","messageId":"309","endLine":17,"endColumn":19},{"ruleId":"310","severity":2,"message":"311","line":41,"column":29,"nodeType":"312","messageId":"313","endLine":41,"endColumn":31},{"ruleId":"306","severity":2,"message":"307","line":51,"column":21,"nodeType":"308","messageId":"309","endLine":51,"endColumn":35},{"ruleId":"306","severity":2,"message":"307","line":57,"column":10,"nodeType":"308","messageId":"309","endLine":57,"endColumn":18},{"ruleId":"306","severity":2,"message":"307","line":61,"column":24,"nodeType":"308","messageId":"309","endLine":61,"endColumn":38},{"ruleId":"314","severity":2,"message":"315","line":72,"column":39,"nodeType":"316","messageId":"317","endLine":72,"endColumn":80},{"ruleId":"306","severity":2,"message":"307","line":78,"column":22,"nodeType":"308","messageId":"309","endLine":80,"endColumn":9},{"ruleId":"306","severity":2,"message":"307","line":78,"column":22,"nodeType":"308","messageId":"309","endLine":79,"endColumn":12},{"ruleId":"314","severity":2,"message":"318","line":90,"column":12,"nodeType":"316","messageId":"319","endLine":90,"endColumn":43},{"ruleId":"314","severity":2,"message":"318","line":91,"column":13,"nodeType":"316","messageId":"319","endLine":91,"endColumn":43},{"ruleId":"295","severity":2,"message":"296","line":55,"column":32,"nodeType":"297","messageId":"298","endLine":55,"endColumn":138},{"ruleId":"306","severity":2,"message":"307","line":55,"column":49,"nodeType":"308","messageId":"309","endLine":55,"endColumn":69},{"ruleId":"306","severity":2,"message":"307","line":55,"column":96,"nodeType":"308","messageId":"309","endLine":55,"endColumn":116},{"ruleId":"279","severity":2,"message":"280","line":1,"column":1,"nodeType":"281","messageId":"282","endLine":1,"endColumn":15},{"ruleId":"306","severity":2,"message":"307","line":19,"column":74,"nodeType":"308","messageId":"309","endLine":19,"endColumn":91},{"ruleId":"306","severity":2,"message":"307","line":28,"column":5,"nodeType":"285","messageId":"309","endLine":28,"endColumn":12},{"ruleId":"320","severity":2,"message":"321","line":38,"column":17,"nodeType":"285","messageId":"322","endLine":38,"endColumn":21},{"ruleId":"320","severity":2,"message":"321","line":41,"column":17,"nodeType":"285","messageId":"322","endLine":41,"endColumn":21},{"ruleId":"320","severity":2,"message":"321","line":45,"column":19,"nodeType":"285","messageId":"322","endLine":45,"endColumn":23},{"ruleId":"306","severity":2,"message":"307","line":46,"column":20,"nodeType":"308","messageId":"309","endLine":46,"endColumn":44},{"ruleId":"306","severity":2,"message":"307","line":47,"column":23,"nodeType":"308","messageId":"309","endLine":47,"endColumn":46},{"ruleId":"306","severity":2,"message":"307","line":48,"column":30,"nodeType":"308","messageId":"309","endLine":48,"endColumn":51},{"ruleId":"306","severity":2,"message":"307","line":48,"column":64,"nodeType":"308","messageId":"309","endLine":48,"endColumn":85},{"ruleId":"314","severity":2,"message":"315","line":48,"column":86,"nodeType":"316","messageId":"317","endLine":48,"endColumn":93},{"ruleId":"320","severity":2,"message":"321","line":50,"column":19,"nodeType":"285","messageId":"322","endLine":50,"endColumn":23},{"ruleId":"320","severity":2,"message":"321","line":52,"column":19,"nodeType":"285","messageId":"322","endLine":52,"endColumn":23},{"ruleId":"306","severity":2,"message":"307","line":52,"column":52,"nodeType":"308","messageId":"309","endLine":52,"endColumn":74},{"ruleId":"320","severity":2,"message":"321","line":57,"column":17,"nodeType":"285","messageId":"322","endLine":57,"endColumn":21},{"ruleId":"287","severity":2,"message":"323","line":67,"column":6,"nodeType":"289","endLine":67,"endColumn":12,"suggestions":"324"},{"ruleId":"283","severity":2,"message":"325","line":72,"column":7,"nodeType":"285","messageId":"286","endLine":72,"endColumn":17},{"ruleId":"287","severity":2,"message":"326","line":78,"column":6,"nodeType":"289","endLine":78,"endColumn":10,"suggestions":"327"},{"ruleId":"328","severity":2,"message":"329","line":100,"column":5,"nodeType":"330","messageId":"331","endLine":126,"endColumn":8,"suggestions":"332"},{"ruleId":"306","severity":2,"message":"307","line":114,"column":15,"nodeType":"285","messageId":"309","endLine":114,"endColumn":22},{"ruleId":"314","severity":2,"message":"318","line":153,"column":35,"nodeType":"316","messageId":"319","endLine":153,"endColumn":48},{"ruleId":"306","severity":2,"message":"307","line":154,"column":16,"nodeType":"308","messageId":"309","endLine":154,"endColumn":34},{"ruleId":"333","severity":2,"message":"334","line":156,"column":24,"nodeType":"285","messageId":"335","endLine":156,"endColumn":27},{"ruleId":"320","severity":2,"message":"336","line":7,"column":21,"nodeType":"285","messageId":"322","endLine":7,"endColumn":25},{"ruleId":"299","severity":2,"message":"300","line":8,"column":5,"nodeType":"301","messageId":"302","endLine":15,"endColumn":6},{"ruleId":"306","severity":2,"message":"307","line":18,"column":3,"nodeType":"285","messageId":"309","endLine":18,"endColumn":8},{"ruleId":"337","severity":2,"message":"338","line":18,"column":23,"nodeType":"339","messageId":"340","endLine":18,"endColumn":38},{"ruleId":"320","severity":2,"message":"336","line":24,"column":21,"nodeType":"285","messageId":"322","endLine":24,"endColumn":25},{"ruleId":"299","severity":2,"message":"300","line":25,"column":5,"nodeType":"301","messageId":"302","endLine":32,"endColumn":6},{"ruleId":"306","severity":2,"message":"307","line":35,"column":3,"nodeType":"285","messageId":"309","endLine":35,"endColumn":8},{"ruleId":"337","severity":2,"message":"341","line":35,"column":34,"nodeType":"339","messageId":"340","endLine":35,"endColumn":49},{"ruleId":"299","severity":2,"message":"300","line":39,"column":3,"nodeType":"301","messageId":"302","endLine":46,"endColumn":4},{"ruleId":"299","severity":2,"message":"300","line":50,"column":3,"nodeType":"301","messageId":"302","endLine":57,"endColumn":4},{"ruleId":"306","severity":2,"message":"307","line":63,"column":19,"nodeType":"308","messageId":"309","endLine":63,"endColumn":51},{"ruleId":"306","severity":2,"message":"307","line":63,"column":60,"nodeType":"308","messageId":"309","endLine":63,"endColumn":70},{"ruleId":"279","severity":2,"message":"280","line":1,"column":1,"nodeType":"281","messageId":"282","endLine":1,"endColumn":15},{"ruleId":"287","severity":2,"message":"342","line":29,"column":6,"nodeType":"289","endLine":29,"endColumn":15,"suggestions":"343"},{"ruleId":"344","severity":2,"message":"345","line":56,"column":14,"nodeType":"297","messageId":"346","endLine":62,"endColumn":14},{"ruleId":"306","severity":2,"message":"307","line":78,"column":52,"nodeType":"285","messageId":"309","endLine":78,"endColumn":64},{"ruleId":"279","severity":2,"message":"280","line":1,"column":1,"nodeType":"281","messageId":"282","endLine":1,"endColumn":15},{"ruleId":"347","severity":2,"message":"348","line":5,"column":20,"nodeType":"339","messageId":"349","endLine":5,"endColumn":101},{"ruleId":"279","severity":2,"message":"280","line":1,"column":1,"nodeType":"281","messageId":"282","endLine":1,"endColumn":15},{"ruleId":"306","severity":2,"message":"307","line":17,"column":24,"nodeType":"285","messageId":"309","endLine":17,"endColumn":34},{"ruleId":"306","severity":2,"message":"307","line":29,"column":35,"nodeType":"285","messageId":"309","endLine":29,"endColumn":45},{"ruleId":"306","severity":2,"message":"307","line":42,"column":35,"nodeType":"285","messageId":"309","endLine":42,"endColumn":45},{"ruleId":"306","severity":2,"message":"307","line":46,"column":57,"nodeType":"285","messageId":"309","endLine":46,"endColumn":67},{"ruleId":"279","severity":2,"message":"280","line":1,"column":1,"nodeType":"281","messageId":"282","endLine":1,"endColumn":15},{"ruleId":"328","severity":2,"message":"329","line":16,"column":7,"nodeType":"330","messageId":"331","endLine":24,"endColumn":12,"suggestions":"350"},{"ruleId":"306","severity":2,"message":"307","line":22,"column":22,"nodeType":"308","messageId":"309","endLine":22,"endColumn":32},{"ruleId":"306","severity":2,"message":"307","line":22,"column":39,"nodeType":"308","messageId":"309","endLine":22,"endColumn":60},{"ruleId":"287","severity":2,"message":"351","line":30,"column":6,"nodeType":"289","endLine":30,"endColumn":12,"suggestions":"352"},{"ruleId":"306","severity":2,"message":"307","line":33,"column":5,"nodeType":"285","messageId":"309","endLine":33,"endColumn":15},{"ruleId":"306","severity":2,"message":"307","line":43,"column":30,"nodeType":"308","messageId":"309","endLine":43,"endColumn":37},{"ruleId":"306","severity":2,"message":"307","line":7,"column":6,"nodeType":"308","messageId":"309","endLine":7,"endColumn":14},{"ruleId":"306","severity":2,"message":"307","line":9,"column":33,"nodeType":"285","messageId":"309","endLine":9,"endColumn":43},{"ruleId":"306","severity":2,"message":"307","line":18,"column":8,"nodeType":"308","messageId":"309","endLine":18,"endColumn":21},"unicorn/no-array-instanceof",["353"],"unicorn/prefer-starts-ends-with",["354"],"@typescript-eslint/ban-ts-comment","Do not use \"@ts-nocheck\" because it alters compilation errors.","Line","tsDirectiveComment","@typescript-eslint/no-use-before-define","'chooseReport' was used before it was defined.","Identifier","noUseBeforeDefine","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'location.pathname'. Either include it or remove the dependency array.","ArrayExpression",["355"],["353"],["354"],"React Hook useEffect has a missing dependency: 'getData'. Either include it or remove the dependency array.",["356"],"no-negated-condition","Unexpected negated condition.","ConditionalExpression","unexpectedNegated","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","@typescript-eslint/no-unused-vars","'data' is defined but never used. Allowed unused args must match /^_/u.","unusedVar","@typescript-eslint/no-unsafe-call","Unsafe call of an `any` typed value.","MemberExpression","unsafeCall","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","@typescript-eslint/restrict-plus-operands","Operands of '+' operation must either be both strings or both numbers.","BinaryExpression","notNumbers","Operands of '+' operation must either be both strings or both numbers. Consider using a template literal.","notStrings","@typescript-eslint/no-shadow","'data' is already declared in the upper scope.","noShadow","React Hook useEffect has a missing dependency: 'act'. Either include it or remove the dependency array. If 'setMode' needs the current value of 'act', you can also switch to useReducer instead of useState and read 'act' in the reducer.",["357"],"'readRecord' was used before it was defined.","React Hook useEffect has missing dependencies: 'mode' and 'readRecord'. Either include them or remove the dependency array.",["358"],"@typescript-eslint/no-floating-promises","Promises must be handled appropriately or explicitly marked as ignored with the `void` operator.","ExpressionStatement","floatingVoid",["359"],"react/no-array-index-key","Do not use Array index in keys","noArrayIndex","'type' is already declared in the upper scope.","@typescript-eslint/restrict-template-expressions","Invalid type \"\"сохранить\" | \"удалить\" | \"создать\" | undefined\" of template literal expression.","CallExpression","invalidType","Invalid type \"\"сохранена\" | \"удалена\" | \"создана\" | undefined\" of template literal expression.","React Hook useEffect has a missing dependency: 'data.state'. Either include it or remove the dependency array.",["360"],"no-nested-ternary","Do not nest ternary expressions.","noNestedTernary","react/display-name","Component definition is missing display name","noDisplayName",["361"],"React Hook useEffect has a missing dependency: 'contents'. Either include it or remove the dependency array.",["362"],"unicorn/no-instanceof-array","unicorn/prefer-string-starts-ends-with",{"desc":"363","fix":"364"},{"desc":"365","fix":"366"},{"desc":"367","fix":"368"},{"desc":"369","fix":"370"},{"messageId":"371","fix":"372","desc":"373"},{"desc":"374","fix":"375"},{"messageId":"371","fix":"376","desc":"373"},{"desc":"377","fix":"378"},"Update the dependencies array to be: [location.pathname]",{"range":"379","text":"380"},"Update the dependencies array to be: [getData, url]",{"range":"381","text":"382"},"Update the dependencies array to be: [act, show]",{"range":"383","text":"384"},"Update the dependencies array to be: [id, mode, readRecord]",{"range":"385","text":"386"},"floatingFixVoid",{"range":"387","text":"388"},"Add void operator to ignore.","Update the dependencies array to be: [data.id, data.state]",{"range":"389","text":"390"},{"range":"391","text":"392"},"Update the dependencies array to be: [contents, open]",{"range":"393","text":"394"},[862,864],"[location.pathname]",[1138,1143],"[getData, url]",[2227,2233],"[act, show]",[2411,2415],"[id, mode, readRecord]",[2873,3683],"void updateSensors(enqueueSnackbar, type, tableName, data).then(() => {\n      fetchService.data(body);\n      method\n        .call(fetchService, tableName)\n        .then(res => {\n          if (res.errors) {\n            getErrorMessage(enqueueSnackbar, type, res.message);\n          } else {\n            if (type === 'create') {\n              setData(res);\n              setMode('update');\n            } else if (type === 'delete') {\n              setStatus('loading');\n              setData({});\n              onClose();\n            }\n\n            getSuccessMessage(enqueueSnackbar, type, data[titleField]);\n          }\n        })\n        .catch(err => {\n          console.log(err);\n          getErrorMessage(enqueueSnackbar, type, err.message);\n        });\n\n      if (type === 'delete') setPopupOpen(false);\n    });",[846,855],"[data.id, data.state]",[509,739],"void (async () => {\n        const res = await fetchService.getFreeSensors();\n\n        if (active) {\n          const pickedValues = contents || [];\n\n          setOptions(res.filter(o => !pickedValues.includes(o)));\n        }\n      })();",[800,806],"[contents, open]"]